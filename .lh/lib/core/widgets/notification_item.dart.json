{
    "sourceFile": "lib/core/widgets/notification_item.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1729861160956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730466402553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,18 @@\n                         initialDate: widget.selectedDate,\r\n                         firstDate: DateTime.now(),\r\n                         lastDate: DateTime(2101),\r\n                       );\r\n-                      if (newDate != null) {\r\n-                        widget.onNotificationUpdate(newDate, isSmsSelected,\r\n-                            isEmailSelected, isPushSelected);\r\n+                      \r\n+                      if (newDate != null) \r\n+                      {\r\n+                          widget.onNotificationUpdate(newDate, isSmsSelected,\r\n+                              isEmailSelected, isPushSelected);\r\n                       }\r\n+                      else {\r\n+                        widget.onNotificationUpdate(widget.selectedDate,\r\n+                            isSmsSelected, isEmailSelected, isPushSelected);\r\n+                      }\r\n                     },\r\n                     borderRadius: BorderRadius.circular(8),\r\n                     splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n                     child: Container(\r\n"
                },
                {
                    "date": 1730978503740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,21 +58,30 @@\n                   flex: 3,\r\n                   child: InkWell(\r\n                     onTap: () async {\r\n                       DateTime? newDate = await showDatePicker(\r\n-                        context: context,\r\n-                        initialDate: widget.selectedDate,\r\n-                        firstDate: DateTime.now(),\r\n-                        lastDate: DateTime(2101),\r\n-                      );\r\n+  context: context,\r\n+  initialDate: widget.selectedDate ?? DateTime.now(), // Default to today if selectedDate is null\r\n+  firstDate: DateTime.now(), // Minimum date is today\r\n+  lastDate: DateTime(2101), // Maximum date\r\n+);\r\n \r\n-                      if (newDate != null) {\r\n-                        widget.onNotificationUpdate(newDate, isSmsSelected,\r\n-                            isEmailSelected, isPushSelected);\r\n-                      } else {\r\n-                        widget.onNotificationUpdate(widget.selectedDate,\r\n-                            isSmsSelected, isEmailSelected, isPushSelected);\r\n-                      }\r\n+if (newDate != null) {\r\n+  widget.onNotificationUpdate(\r\n+    newDate,\r\n+    isSmsSelected,\r\n+    isEmailSelected,\r\n+    isPushSelected,\r\n+  );\r\n+} else {\r\n+  widget.onNotificationUpdate(\r\n+    widget.selectedDate ?? DateTime.now(), // Default to today if selectedDate is null\r\n+    isSmsSelected,\r\n+    isEmailSelected,\r\n+    isPushSelected,\r\n+  );\r\n+}\r\n+\r\n                     },\r\n                     borderRadius: BorderRadius.circular(8),\r\n                     splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n                     child: Container(\r\n"
                }
            ],
            "date": 1729861160956,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:intl/intl.dart';\r\n\r\nclass NotificationItem extends StatefulWidget {\r\n  final int index;\r\n  final DateTime selectedDate;\r\n  final bool sms;\r\n  final bool email;\r\n  final bool push;\r\n  final void Function(DateTime, bool, bool, bool) onNotificationUpdate;\r\n  final VoidCallback onNotificationRemove;\r\n\r\n  const NotificationItem({\r\n    super.key,\r\n    required this.index,\r\n    required this.selectedDate,\r\n    required this.sms,\r\n    required this.email,\r\n    required this.push,\r\n    required this.onNotificationUpdate,\r\n    required this.onNotificationRemove,\r\n  });\r\n\r\n  @override\r\n  _NotificationItemState createState() => _NotificationItemState();\r\n}\r\n\r\nclass _NotificationItemState extends State<NotificationItem> {\r\n  late bool isSmsSelected;\r\n  late bool isEmailSelected;\r\n  late bool isPushSelected;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    isSmsSelected = widget.sms;\r\n    isEmailSelected = widget.email;\r\n    isPushSelected = widget.push;\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Card(\r\n      margin: const EdgeInsets.symmetric(vertical: 8),\r\n      elevation: 3,\r\n      shape: RoundedRectangleBorder(\r\n        borderRadius: BorderRadius.circular(15),\r\n      ),\r\n      child: Padding(\r\n        padding: const EdgeInsets.all(16),\r\n        child: Column(\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            // Row for Date Picker and Time Picker\r\n            Row(\r\n              children: [\r\n                Expanded(\r\n                  flex: 3,\r\n                  child: InkWell(\r\n                    onTap: () async {\r\n                      DateTime? newDate = await showDatePicker(\r\n                        context: context,\r\n                        initialDate: widget.selectedDate,\r\n                        firstDate: DateTime.now(),\r\n                        lastDate: DateTime(2101),\r\n                      );\r\n                      if (newDate != null) {\r\n                        widget.onNotificationUpdate(\r\n                          newDate, isSmsSelected, isEmailSelected, isPushSelected);\r\n                      }\r\n                    },\r\n                    borderRadius: BorderRadius.circular(8),\r\n                    splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n                    child: Container(\r\n                      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n                      decoration: BoxDecoration(\r\n                        color: Colors.indigoAccent.withOpacity(0.1),\r\n                        borderRadius: BorderRadius.circular(8),\r\n                      ),\r\n                      child: Row(\r\n                        children: [\r\n                          const Icon(Icons.calendar_today_outlined,\r\n                              color: Colors.indigoAccent),\r\n                          const SizedBox(width: 8),\r\n                          Expanded(\r\n                            child: Text(\r\n                              DateFormat('dd.MM.yyyy').format(widget.selectedDate),\r\n                              style: const TextStyle(\r\n                                fontSize: 16,\r\n                                color: Colors.indigoAccent,\r\n                                fontWeight: FontWeight.bold,\r\n                                decoration: TextDecoration.underline,\r\n                              ),\r\n                              overflow: TextOverflow.ellipsis,\r\n                            ),\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n                const SizedBox(width: 16),\r\n                Expanded(\r\n                  flex: 2,\r\n                  child: InkWell(\r\n                    onTap: () async {\r\n                      TimeOfDay? time = await showTimePicker(\r\n                        context: context,\r\n                        initialTime: TimeOfDay.fromDateTime(widget.selectedDate),\r\n                      );\r\n                      if (time != null) {\r\n                        DateTime updatedDateTime = DateTime(\r\n                          widget.selectedDate.year,\r\n                          widget.selectedDate.month,\r\n                          widget.selectedDate.day,\r\n                          time.hour,\r\n                          time.minute,\r\n                        );\r\n                        widget.onNotificationUpdate(\r\n                          updatedDateTime, isSmsSelected, isEmailSelected, isPushSelected);\r\n                      }\r\n                    },\r\n                    borderRadius: BorderRadius.circular(8),\r\n                    splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n                    child: Container(\r\n                      padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n                      decoration: BoxDecoration(\r\n                        color: Colors.indigoAccent.withOpacity(0.1),\r\n                        borderRadius: BorderRadius.circular(8),\r\n                      ),\r\n                      child: Row(\r\n                        children: [\r\n                          const Icon(Icons.access_time, color: Colors.indigoAccent),\r\n                          const SizedBox(width: 8),\r\n                          Text(\r\n                            DateFormat('HH:mm').format(widget.selectedDate),\r\n                            style: const TextStyle(\r\n                              fontSize: 16,\r\n                              color: Colors.indigoAccent,\r\n                              fontWeight: FontWeight.bold,\r\n                            ),\r\n                            overflow: TextOverflow.ellipsis,\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n            const SizedBox(height: 20),\r\n\r\n            // Checkbox Row for SMS, Email, Push Notifications\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n              children: [\r\n                Flexible(\r\n                  child: Column(\r\n                    children: [\r\n                      Checkbox(\r\n                        value: isSmsSelected,\r\n                        onChanged: (bool? value) {\r\n                          setState(() {\r\n                            isSmsSelected = value ?? false;\r\n                          });\r\n                          widget.onNotificationUpdate(\r\n                            widget.selectedDate, isSmsSelected, isEmailSelected, isPushSelected);\r\n                        },\r\n                      ),\r\n                      const Text('SMS'),\r\n                    ],\r\n                  ),\r\n                ),\r\n                Flexible(\r\n                  child: Column(\r\n                    children: [\r\n                      Checkbox(\r\n                        value: isEmailSelected,\r\n                        onChanged: (bool? value) {\r\n                          setState(() {\r\n                            isEmailSelected = value ?? false;\r\n                          });\r\n                          widget.onNotificationUpdate(\r\n                            widget.selectedDate, isSmsSelected, isEmailSelected, isPushSelected);\r\n                        },\r\n                      ),\r\n                      const Text('Email'),\r\n                    ],\r\n                  ),\r\n                ),\r\n                Flexible(\r\n                  child: Column(\r\n                    children: [\r\n                      Checkbox(\r\n                        value: isPushSelected,\r\n                        onChanged: (bool? value) {\r\n                          setState(() {\r\n                            isPushSelected = value ?? false;\r\n                          });\r\n                          widget.onNotificationUpdate(\r\n                            widget.selectedDate, isSmsSelected, isEmailSelected, isPushSelected);\r\n                        },\r\n                      ),\r\n                      const Text('Notificări Push'),\r\n                    ],\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n\r\n            const Divider(height: 24),\r\n\r\n            // Remove Notification Button\r\n            Align(\r\n              alignment: Alignment.centerRight,\r\n              child: TextButton.icon(\r\n                onPressed: widget.onNotificationRemove,\r\n                icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n                label: const Text(\r\n                  'Sterge',\r\n                  style: TextStyle(\r\n                    color: Colors.redAccent,\r\n                    fontSize: 14,\r\n                    fontWeight: FontWeight.bold,\r\n                  ),\r\n                ),\r\n                style: TextButton.styleFrom(\r\n                  padding: EdgeInsets.zero,\r\n                  tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}