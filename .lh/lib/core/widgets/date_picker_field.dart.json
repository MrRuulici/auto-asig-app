{
    "sourceFile": "lib/core/widgets/date_picker_field.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1728305031847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728308222569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n   Future<void> _selectDate(BuildContext context) async {\n     final DateTime? pickedDate = await showDatePicker(\n       context: context,\n       initialDate: selectedDate ?? DateTime.now(),\n-      // firstDate: DateTime(2000),\n       firstDate: DateTime.now(),\n       lastDate: DateTime(2300),\n     );\n     if (pickedDate != null) {\n"
                },
                {
                    "date": 1729862352242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,61 @@\n import 'package:flutter/material.dart';\r\n+import 'package:intl/intl.dart';\r\n \r\n class DatePickerField extends StatelessWidget {\r\n   final String label;\r\n   final DateTime? selectedDate;\r\n-  final Function(DateTime?) onDateSelected;\r\n+  final ValueChanged<DateTime> onDateSelected;\r\n \r\n   const DatePickerField({\r\n-    super.key,\r\n+    Key? key,\r\n     required this.label,\r\n-    this.selectedDate,\r\n+    required this.selectedDate,\r\n     required this.onDateSelected,\r\n-  });\r\n+  }) : super(key: key);\r\n \r\n-  Future<void> _selectDate(BuildContext context) async {\r\n-    final DateTime? pickedDate = await showDatePicker(\r\n-      context: context,\r\n-      initialDate: selectedDate ?? DateTime.now(),\r\n-      firstDate: DateTime.now(),\r\n-      lastDate: DateTime(2300),\r\n-    );\r\n-    if (pickedDate != null) {\r\n-      onDateSelected(pickedDate);\r\n-    }\r\n-  }\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Column(\r\n-      crossAxisAlignment: CrossAxisAlignment.center,\r\n-      children: [\r\n-        Text(\r\n-          label,\r\n-          textAlign: TextAlign.center,\r\n+    return InkWell(\r\n+      onTap: () async {\r\n+        final DateTime? pickedDate = await showDatePicker(\r\n+          context: context,\r\n+          initialDate: selectedDate ?? DateTime.now(),\r\n+          firstDate: DateTime.now(),\r\n+          lastDate: DateTime(2101),\r\n+        );\r\n+        if (pickedDate != null) {\r\n+          onDateSelected(pickedDate); // Pass the selected date\r\n+        }\r\n+      },\r\n+      child: Container(\r\n+        padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n+        decoration: BoxDecoration(\r\n+          color: Colors.grey.shade100,\r\n+          borderRadius: BorderRadius.circular(15),\r\n         ),\r\n-        const SizedBox(height: 10),\r\n-        ElevatedButton(\r\n-          onPressed: () => _selectDate(context),\r\n-          child: Text(selectedDate == null\r\n-              ? 'Selectează o dată'\r\n-              : '${selectedDate!.day}/${selectedDate!.month}/${selectedDate!.year}'),\r\n+        child: Row(\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          children: [\r\n+            Text(\r\n+              label,\r\n+              style: const TextStyle(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+            Text(\r\n+              selectedDate != null\r\n+                  ? DateFormat('dd.MM.yyyy').format(selectedDate!)\r\n+                  : 'Select date',\r\n+              style: const TextStyle(\r\n+                fontSize: 16,\r\n+                color: Colors.indigoAccent,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+          ],\r\n         ),\r\n-      ],\r\n+      ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1730267745412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,21 @@\n-import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n-\n-class DatePickerField extends StatelessWidget {\n-  final String label;\n-  final DateTime? selectedDate;\n+\r\n+class DatePickerField extends StatelessWidget {\r\n+  final String label;\r\n+  final DateTime? selectedDate;\r\n   final ValueChanged<DateTime> onDateSelected;\r\n-\n-  const DatePickerField({\n+\r\n+  const DatePickerField({\r\n     Key? key,\r\n-    required this.label,\n+    required this.label,\r\n     required this.selectedDate,\r\n-    required this.onDateSelected,\n+    required this.onDateSelected,\r\n   }) : super(key: key);\r\n-\n-  @override\n-  Widget build(BuildContext context) {\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n     return InkWell(\r\n       onTap: () async {\r\n         final DateTime? pickedDate = await showDatePicker(\r\n           context: context,\r\n@@ -31,9 +31,9 @@\n         padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n         decoration: BoxDecoration(\r\n           color: Colors.grey.shade100,\r\n           borderRadius: BorderRadius.circular(15),\r\n-        ),\n+        ),\r\n         child: Row(\r\n           mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Text(\r\n@@ -45,17 +45,17 @@\n             ),\r\n             Text(\r\n               selectedDate != null\r\n                   ? DateFormat('dd.MM.yyyy').format(selectedDate!)\r\n-                  : 'Select date',\r\n+                  : 'Selectează data',\r\n               style: const TextStyle(\r\n                 fontSize: 16,\r\n                 color: Colors.indigoAccent,\r\n                 fontWeight: FontWeight.bold,\r\n               ),\r\n             ),\r\n           ],\r\n-        ),\n+        ),\r\n       ),\r\n-    );\n-  }\n-}\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1730267753252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:intl/intl.dart';\r\n+\r\n+class DatePickerField extends StatelessWidget {\r\n+  final String label;\r\n+  final DateTime? selectedDate;\r\n+  final ValueChanged<DateTime> onDateSelected;\r\n+\r\n+  const DatePickerField({\r\n+    Key? key,\r\n+    required this.label,\r\n+    required this.selectedDate,\r\n+    required this.onDateSelected,\r\n+  }) : super(key: key);\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return InkWell(\r\n+      onTap: () async {\r\n+        final DateTime? pickedDate = await showDatePicker(\r\n+          context: context,\r\n+          initialDate: selectedDate ?? DateTime.now(),\r\n+          firstDate: DateTime.now(),\r\n+          lastDate: DateTime(2101),\r\n+        );\r\n+        if (pickedDate != null) {\r\n+          onDateSelected(pickedDate); // Pass the selected date\r\n+        }\r\n+      },\r\n+      child: Container(\r\n+        padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n+        decoration: BoxDecoration(\r\n+          color: Colors.grey.shade100,\r\n+          borderRadius: BorderRadius.circular(15),\r\n+        ),\r\n+        child: Row(\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          children: [\r\n+            Text(\r\n+              label,\r\n+              style: const TextStyle(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+            Text(\r\n+              selectedDate != null\r\n+                  ? DateFormat('dd.MM.yyyy').format(selectedDate!)\r\n+                  : 'Data',\r\n+              style: const TextStyle(\r\n+                fontSize: 16,\r\n+                color: Colors.indigoAccent,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1730267775052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:intl/intl.dart';\r\n+\r\n+class DatePickerField extends StatelessWidget {\r\n+  final String label;\r\n+  final DateTime? selectedDate;\r\n+  final ValueChanged<DateTime> onDateSelected;\r\n+\r\n+  const DatePickerField({\r\n+    Key? key,\r\n+    required this.label,\r\n+    required this.selectedDate,\r\n+    required this.onDateSelected,\r\n+  }) : super(key: key);\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return InkWell(\r\n+      onTap: () async {\r\n+        final DateTime? pickedDate = await showDatePicker(\r\n+          context: context,\r\n+          initialDate: selectedDate ?? DateTime.now(),\r\n+          firstDate: DateTime.now(),\r\n+          lastDate: DateTime(2101),\r\n+        );\r\n+        if (pickedDate != null) {\r\n+          onDateSelected(pickedDate); // Pass the selected date\r\n+        }\r\n+      },\r\n+      child: Container(\r\n+        padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n+        decoration: BoxDecoration(\r\n+          color: Colors.grey.shade100,\r\n+          borderRadius: BorderRadius.circular(15),\r\n+        ),\r\n+        child: Row(\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+          children: [\r\n+            Text(\r\n+              label,\r\n+              style: const TextStyle(\r\n+                fontSize: 16,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+            Text(\r\n+              selectedDate != null\r\n+                  ? DateFormat('dd.MM.yyyy').format(selectedDate!)\r\n+                  : 'Data',\r\n+              style: const TextStyle(\r\n+                // fontSize: 16,\r\n+                color: Colors.indigoAccent,\r\n+                fontWeight: FontWeight.bold,\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1730566358390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,13 @@\n   final DateTime? selectedDate;\r\n   final ValueChanged<DateTime> onDateSelected;\r\n \r\n   const DatePickerField({\r\n-    Key? key,\r\n+    super.key,\r\n     required this.label,\r\n     required this.selectedDate,\r\n     required this.onDateSelected,\r\n-  }) : super(key: key);\r\n+  });\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return InkWell(\r\n"
                },
                {
                    "date": 1730978411019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,19 +15,42 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return InkWell(\r\n-      onTap: () async {\r\n-        final DateTime? pickedDate = await showDatePicker(\r\n-          context: context,\r\n-          initialDate: selectedDate ?? DateTime.now(),\r\n-          firstDate: DateTime.now(),\r\n-          lastDate: DateTime(2101),\r\n-        );\r\n-        if (pickedDate != null) {\r\n-          onDateSelected(pickedDate); // Pass the selected date\r\n-        }\r\n+      // onTap: () async {\r\n+      //   final DateTime? pickedDate = await showDatePicker(\r\n+      //     context: context,\r\n+      //     initialDate: selectedDate ?? DateTime.now(),\r\n+      //     firstDate: DateTime.now(),\r\n+      //     lastDate: DateTime(2101),\r\n+      //   );\r\n+      //   if (pickedDate != null) {\r\n+      //     onDateSelected(pickedDate); // Pass the selected date\r\n+      //   }\r\n+      // },\r\n+      onTap: () async{\r\n+          DateTime now = DateTime.now();\r\n+  DateTime firstDate = now;\r\n+  \r\n+  // Use today as the default initial date if selectedDate is null\r\n+  DateTime initialDate = (selectedDate != null && selectedDate!.isAfter(firstDate))\r\n+      ? selectedDate!\r\n+      : firstDate;\r\n+      \r\n+  DateTime lastDate = DateTime(9999);\r\n+\r\n+  DateTime? pickedDate = await showDatePicker(\r\n+    context: context,\r\n+    initialDate: initialDate, // Use adjusted initialDate\r\n+    firstDate: firstDate, // Set today as the minimum selectable date\r\n+    lastDate: lastDate,\r\n+  );\r\n+\r\n+  if (pickedDate != null) {\r\n+    onDateSelected(pickedDate);\r\n+  }\r\n       },\r\n+      \r\n       child: Container(\r\n         padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),\r\n         decoration: BoxDecoration(\r\n           color: Colors.grey.shade100,\r\n"
                },
                {
                    "date": 1730978441297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return InkWell(\r\n+      // Old implementation\r\n       // onTap: () async {\r\n       //   final DateTime? pickedDate = await showDatePicker(\r\n       //     context: context,\r\n       //     initialDate: selectedDate ?? DateTime.now(),\r\n"
                }
            ],
            "date": 1728305031847,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\n\nclass DatePickerField extends StatelessWidget {\n  final String label;\n  final DateTime? selectedDate;\n  final Function(DateTime?) onDateSelected;\n\n  const DatePickerField({\n    super.key,\n    required this.label,\n    this.selectedDate,\n    required this.onDateSelected,\n  });\n\n  Future<void> _selectDate(BuildContext context) async {\n    final DateTime? pickedDate = await showDatePicker(\n      context: context,\n      initialDate: selectedDate ?? DateTime.now(),\n      // firstDate: DateTime(2000),\n      firstDate: DateTime.now(),\n      lastDate: DateTime(2300),\n    );\n    if (pickedDate != null) {\n      onDateSelected(pickedDate);\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.center,\n      children: [\n        Text(\n          label,\n          textAlign: TextAlign.center,\n        ),\n        const SizedBox(height: 10),\n        ElevatedButton(\n          onPressed: () => _selectDate(context),\n          child: Text(selectedDate == null\n              ? 'Selectează o dată'\n              : '${selectedDate!.day}/${selectedDate!.month}/${selectedDate!.year}'),\n        ),\n      ],\n    );\n  }\n}\n"
        }
    ]
}