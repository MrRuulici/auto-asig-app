{
    "sourceFile": "lib/feature/id_cards_screen/widgets/notification_item.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1729358878739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729358895039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,96 @@\n+import 'package:auto_asig/core/widgets/date_picker_field.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:intl/intl.dart';\r\n+import 'package:auto_asig/feature/id_cards_screen/cubit/id_cards_cubit.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class NotificationItem extends StatelessWidget {\r\n-  const NotificationItem({super.key});\r\n+  final int index;\r\n+  final DateTime selectedDate;\r\n \r\n+  const NotificationItem({\r\n+    Key? key,\r\n+    required this.index,\r\n+    required this.selectedDate,\r\n+  }) : super(key: key);\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+    final idCardsCubit = context.read<IdCardsCubit>();\r\n+\r\n+    return Container(\r\n+      margin: const EdgeInsets.symmetric(vertical: 8),\r\n+      padding: const EdgeInsets.all(16),\r\n+      decoration: BoxDecoration(\r\n+        color: Colors.grey.shade100,\r\n+        borderRadius: BorderRadius.circular(15),\r\n+      ),\r\n+      child: Column(\r\n+        crossAxisAlignment: CrossAxisAlignment.start,\r\n+        children: [\r\n+          // Date Picker for the notification\r\n+          DatePickerField(\r\n+            label: \"Notification ${index + 1}\",\r\n+            selectedDate: selectedDate,\r\n+            onDateSelected: (newDate) {\r\n+              if (newDate != null) {\r\n+                idCardsCubit.updateNotification(index, newDate);\r\n+              }\r\n+            },\r\n+          ),\r\n+\r\n+          // Time picker button\r\n+          TextButton(\r\n+            onPressed: () async {\r\n+              TimeOfDay? time = await showTimePicker(\r\n+                context: context,\r\n+                initialTime: TimeOfDay.fromDateTime(selectedDate),\r\n+              );\r\n+              if (time != null) {\r\n+                DateTime updatedDateTime = DateTime(\r\n+                  selectedDate.year,\r\n+                  selectedDate.month,\r\n+                  selectedDate.day,\r\n+                  time.hour,\r\n+                  time.minute,\r\n+                );\r\n+                idCardsCubit.updateNotification(index, updatedDateTime);\r\n+              }\r\n+            },\r\n+            style: TextButton.styleFrom(\r\n+              padding: EdgeInsets.zero, // Remove default padding\r\n+            ),\r\n+            child: Row(\r\n+              mainAxisSize: MainAxisSize.min,\r\n+              children: [\r\n+                const Icon(Icons.access_time, color: Colors.indigoAccent),\r\n+                const SizedBox(width: 8),\r\n+                Text(\r\n+                  'Set notification time: ${DateFormat('HH:mm').format(selectedDate)}',\r\n+                  style: const TextStyle(\r\n+                    fontSize: 16,\r\n+                    color: Colors.indigoAccent,\r\n+                    decoration: TextDecoration.underline,\r\n+                  ),\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          ),\r\n+\r\n+          // Remove notification button\r\n+          Align(\r\n+            alignment: Alignment.centerRight,\r\n+            child: TextButton.icon(\r\n+              onPressed: () => idCardsCubit.removeNotification(context, index),\r\n+              icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n+              label: const Text(\r\n+                'Remove',\r\n+                style: TextStyle(color: Colors.redAccent),\r\n+              ),\r\n+            ),\r\n+          ),\r\n+        ],\r\n+      ),\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1729359028653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                 idCardsCubit.updateNotification(index, updatedDateTime);\r\n               }\r\n             },\r\n             style: TextButton.styleFrom(\r\n-              padding: EdgeInsets.zero, // Remove default padding\r\n+              padding: EdgeInsets.zero,\r\n             ),\r\n             child: Row(\r\n               mainAxisSize: MainAxisSize.min,\r\n               children: [\r\n"
                },
                {
                    "date": 1729359039707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,12 +8,12 @@\n   final int index;\r\n   final DateTime selectedDate;\r\n \r\n   const NotificationItem({\r\n-    Key? key,\r\n+    super.key,\r\n     required this.index,\r\n     required this.selectedDate,\r\n-  }) : super(key: key);\r\n+  });\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     final idCardsCubit = context.read<IdCardsCubit>();\r\n"
                },
                {
                    "date": 1729359054199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import 'package:auto_asig/core/widgets/date_picker_field.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n import 'package:auto_asig/feature/id_cards_screen/cubit/id_cards_cubit.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n@@ -8,89 +7,117 @@\n   final int index;\r\n   final DateTime selectedDate;\r\n \r\n   const NotificationItem({\r\n-    super.key,\r\n+    Key? key,\r\n     required this.index,\r\n     required this.selectedDate,\r\n-  });\r\n+  }) : super(key: key);\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     final idCardsCubit = context.read<IdCardsCubit>();\r\n \r\n-    return Container(\r\n+    return Card(\r\n       margin: const EdgeInsets.symmetric(vertical: 8),\r\n-      padding: const EdgeInsets.all(16),\r\n-      decoration: BoxDecoration(\r\n-        color: Colors.grey.shade100,\r\n+      elevation: 3,\r\n+      shape: RoundedRectangleBorder(\r\n         borderRadius: BorderRadius.circular(15),\r\n       ),\r\n-      child: Column(\r\n-        crossAxisAlignment: CrossAxisAlignment.start,\r\n-        children: [\r\n-          // Date Picker for the notification\r\n-          DatePickerField(\r\n-            label: \"Notification ${index + 1}\",\r\n-            selectedDate: selectedDate,\r\n-            onDateSelected: (newDate) {\r\n-              if (newDate != null) {\r\n-                idCardsCubit.updateNotification(index, newDate);\r\n-              }\r\n-            },\r\n-          ),\r\n-\r\n-          // Time picker button\r\n-          TextButton(\r\n-            onPressed: () async {\r\n-              TimeOfDay? time = await showTimePicker(\r\n-                context: context,\r\n-                initialTime: TimeOfDay.fromDateTime(selectedDate),\r\n-              );\r\n-              if (time != null) {\r\n-                DateTime updatedDateTime = DateTime(\r\n-                  selectedDate.year,\r\n-                  selectedDate.month,\r\n-                  selectedDate.day,\r\n-                  time.hour,\r\n-                  time.minute,\r\n-                );\r\n-                idCardsCubit.updateNotification(index, updatedDateTime);\r\n-              }\r\n-            },\r\n-            style: TextButton.styleFrom(\r\n-              padding: EdgeInsets.zero,\r\n-            ),\r\n-            child: Row(\r\n-              mainAxisSize: MainAxisSize.min,\r\n+      child: Padding(\r\n+        padding: const EdgeInsets.all(16),\r\n+        child: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.start,\r\n+          children: [\r\n+            // Date Picker for Notification\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n               children: [\r\n-                const Icon(Icons.access_time, color: Colors.indigoAccent),\r\n-                const SizedBox(width: 8),\r\n-                Text(\r\n-                  'Set notification time: ${DateFormat('HH:mm').format(selectedDate)}',\r\n-                  style: const TextStyle(\r\n-                    fontSize: 16,\r\n-                    color: Colors.indigoAccent,\r\n-                    decoration: TextDecoration.underline,\r\n+                Expanded(\r\n+                  child: DatePickerField(\r\n+                    label: \"Notification ${index + 1}\",\r\n+                    selectedDate: selectedDate,\r\n+                    onDateSelected: (newDate) {\r\n+                      if (newDate != null) {\r\n+                        idCardsCubit.updateNotification(index, newDate);\r\n+                      }\r\n+                    },\r\n                   ),\r\n                 ),\r\n+                const SizedBox(width: 12),\r\n+                // Time Picker Button\r\n+                InkWell(\r\n+                  onTap: () async {\r\n+                    TimeOfDay? time = await showTimePicker(\r\n+                      context: context,\r\n+                      initialTime: TimeOfDay.fromDateTime(selectedDate),\r\n+                    );\r\n+                    if (time != null) {\r\n+                      DateTime updatedDateTime = DateTime(\r\n+                        selectedDate.year,\r\n+                        selectedDate.month,\r\n+                        selectedDate.day,\r\n+                        time.hour,\r\n+                        time.minute,\r\n+                      );\r\n+                      idCardsCubit.updateNotification(index, updatedDateTime);\r\n+                    }\r\n+                  },\r\n+                  borderRadius: BorderRadius.circular(8),\r\n+                  splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n+                  child: Container(\r\n+                    padding: const EdgeInsets.symmetric(\r\n+                      horizontal: 12,\r\n+                      vertical: 8,\r\n+                    ),\r\n+                    decoration: BoxDecoration(\r\n+                      color: Colors.indigoAccent.withOpacity(0.1),\r\n+                      borderRadius: BorderRadius.circular(8),\r\n+                    ),\r\n+                    child: Row(\r\n+                      children: [\r\n+                        const Icon(Icons.access_time,\r\n+                            color: Colors.indigoAccent),\r\n+                        const SizedBox(width: 8),\r\n+                        Text(\r\n+                          DateFormat('HH:mm').format(selectedDate),\r\n+                          style: const TextStyle(\r\n+                            fontSize: 16,\r\n+                            color: Colors.indigoAccent,\r\n+                            fontWeight: FontWeight.bold,\r\n+                          ),\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  ),\r\n+                ),\r\n               ],\r\n             ),\r\n-          ),\r\n+            const Divider(height: 24),\r\n \r\n-          // Remove notification button\r\n-          Align(\r\n-            alignment: Alignment.centerRight,\r\n-            child: TextButton.icon(\r\n-              onPressed: () => idCardsCubit.removeNotification(context, index),\r\n-              icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n-              label: const Text(\r\n-                'Remove',\r\n-                style: TextStyle(color: Colors.redAccent),\r\n+            // Remove Notification Button\r\n+            Align(\r\n+              alignment: Alignment.centerRight,\r\n+              child: ElevatedButton.icon(\r\n+                onPressed: () => idCardsCubit.removeNotification(context, index),\r\n+                icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n+                label: const Text('Remove'),\r\n+                style: ElevatedButton.styleFrom(\r\n+                  backgroundColor: Colors.redAccent.withOpacity(0.1),\r\n+                  foregroundColor: Colors.redAccent,\r\n+                  padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n+                  shape: RoundedRectangleBorder(\r\n+                    borderRadius: BorderRadius.circular(10),\r\n+                  ),\r\n+                  textStyle: const TextStyle(\r\n+                    fontSize: 14,\r\n+                    fontWeight: FontWeight.bold,\r\n+                  ),\r\n+                ),\r\n               ),\r\n             ),\r\n-          ),\r\n-        ],\r\n+          ],\r\n+        ),\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1729359150064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:auto_asig/core/widgets/date_picker_field.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n import 'package:auto_asig/feature/id_cards_screen/cubit/id_cards_cubit.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n@@ -97,15 +98,17 @@\n             // Remove Notification Button\r\n             Align(\r\n               alignment: Alignment.centerRight,\r\n               child: ElevatedButton.icon(\r\n-                onPressed: () => idCardsCubit.removeNotification(context, index),\r\n+                onPressed: () =>\r\n+                    idCardsCubit.removeNotification(context, index),\r\n                 icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n                 label: const Text('Remove'),\r\n                 style: ElevatedButton.styleFrom(\r\n                   backgroundColor: Colors.redAccent.withOpacity(0.1),\r\n                   foregroundColor: Colors.redAccent,\r\n-                  padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n+                  padding:\r\n+                      const EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n                   shape: RoundedRectangleBorder(\r\n                     borderRadius: BorderRadius.circular(10),\r\n                   ),\r\n                   textStyle: const TextStyle(\r\n"
                },
                {
                    "date": 1729359165098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import 'package:auto_asig/core/widgets/date_picker_field.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n import 'package:auto_asig/feature/id_cards_screen/cubit/id_cards_cubit.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n@@ -29,94 +28,99 @@\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n           children: [\r\n             // Date Picker for Notification\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-              children: [\r\n-                Expanded(\r\n-                  child: DatePickerField(\r\n-                    label: \"Notification ${index + 1}\",\r\n-                    selectedDate: selectedDate,\r\n-                    onDateSelected: (newDate) {\r\n-                      if (newDate != null) {\r\n-                        idCardsCubit.updateNotification(index, newDate);\r\n-                      }\r\n-                    },\r\n+            GestureDetector(\r\n+              onTap: () async {\r\n+                DateTime? newDate = await showDatePicker(\r\n+                  context: context,\r\n+                  initialDate: selectedDate,\r\n+                  firstDate: DateTime.now(),\r\n+                  lastDate: DateTime(2101),\r\n+                );\r\n+                if (newDate != null) {\r\n+                  idCardsCubit.updateNotification(index, newDate);\r\n+                }\r\n+              },\r\n+              child: Row(\r\n+                children: [\r\n+                  const Icon(Icons.calendar_today_outlined, color: Colors.indigoAccent),\r\n+                  const SizedBox(width: 8),\r\n+                  Text(\r\n+                    DateFormat('yyyy-MM-dd').format(selectedDate),\r\n+                    style: const TextStyle(\r\n+                      fontSize: 16,\r\n+                      color: Colors.black,\r\n+                      fontWeight: FontWeight.bold,\r\n+                    ),\r\n                   ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            const SizedBox(height: 20),\r\n+\r\n+            // Time Picker Button\r\n+            InkWell(\r\n+              onTap: () async {\r\n+                TimeOfDay? time = await showTimePicker(\r\n+                  context: context,\r\n+                  initialTime: TimeOfDay.fromDateTime(selectedDate),\r\n+                );\r\n+                if (time != null) {\r\n+                  DateTime updatedDateTime = DateTime(\r\n+                    selectedDate.year,\r\n+                    selectedDate.month,\r\n+                    selectedDate.day,\r\n+                    time.hour,\r\n+                    time.minute,\r\n+                  );\r\n+                  idCardsCubit.updateNotification(index, updatedDateTime);\r\n+                }\r\n+              },\r\n+              borderRadius: BorderRadius.circular(8),\r\n+              splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n+              child: Container(\r\n+                padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n+                decoration: BoxDecoration(\r\n+                  color: Colors.indigoAccent.withOpacity(0.1),\r\n+                  borderRadius: BorderRadius.circular(8),\r\n                 ),\r\n-                const SizedBox(width: 12),\r\n-                // Time Picker Button\r\n-                InkWell(\r\n-                  onTap: () async {\r\n-                    TimeOfDay? time = await showTimePicker(\r\n-                      context: context,\r\n-                      initialTime: TimeOfDay.fromDateTime(selectedDate),\r\n-                    );\r\n-                    if (time != null) {\r\n-                      DateTime updatedDateTime = DateTime(\r\n-                        selectedDate.year,\r\n-                        selectedDate.month,\r\n-                        selectedDate.day,\r\n-                        time.hour,\r\n-                        time.minute,\r\n-                      );\r\n-                      idCardsCubit.updateNotification(index, updatedDateTime);\r\n-                    }\r\n-                  },\r\n-                  borderRadius: BorderRadius.circular(8),\r\n-                  splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n-                  child: Container(\r\n-                    padding: const EdgeInsets.symmetric(\r\n-                      horizontal: 12,\r\n-                      vertical: 8,\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(Icons.access_time, color: Colors.indigoAccent),\r\n+                    const SizedBox(width: 8),\r\n+                    Text(\r\n+                      DateFormat('HH:mm').format(selectedDate),\r\n+                      style: const TextStyle(\r\n+                        fontSize: 16,\r\n+                        color: Colors.indigoAccent,\r\n+                        fontWeight: FontWeight.bold,\r\n+                      ),\r\n                     ),\r\n-                    decoration: BoxDecoration(\r\n-                      color: Colors.indigoAccent.withOpacity(0.1),\r\n-                      borderRadius: BorderRadius.circular(8),\r\n-                    ),\r\n-                    child: Row(\r\n-                      children: [\r\n-                        const Icon(Icons.access_time,\r\n-                            color: Colors.indigoAccent),\r\n-                        const SizedBox(width: 8),\r\n-                        Text(\r\n-                          DateFormat('HH:mm').format(selectedDate),\r\n-                          style: const TextStyle(\r\n-                            fontSize: 16,\r\n-                            color: Colors.indigoAccent,\r\n-                            fontWeight: FontWeight.bold,\r\n-                          ),\r\n-                        ),\r\n-                      ],\r\n-                    ),\r\n-                  ),\r\n+                  ],\r\n                 ),\r\n-              ],\r\n+              ),\r\n             ),\r\n             const Divider(height: 24),\r\n \r\n-            // Remove Notification Button\r\n+            // Remove Notification Button (simplified)\r\n             Align(\r\n               alignment: Alignment.centerRight,\r\n-              child: ElevatedButton.icon(\r\n-                onPressed: () =>\r\n-                    idCardsCubit.removeNotification(context, index),\r\n+              child: TextButton.icon(\r\n+                onPressed: () => idCardsCubit.removeNotification(context, index),\r\n                 icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n-                label: const Text('Remove'),\r\n-                style: ElevatedButton.styleFrom(\r\n-                  backgroundColor: Colors.redAccent.withOpacity(0.1),\r\n-                  foregroundColor: Colors.redAccent,\r\n-                  padding:\r\n-                      const EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n-                  shape: RoundedRectangleBorder(\r\n-                    borderRadius: BorderRadius.circular(10),\r\n-                  ),\r\n-                  textStyle: const TextStyle(\r\n+                label: const Text(\r\n+                  'Remove',\r\n+                  style: TextStyle(\r\n+                    color: Colors.redAccent,\r\n                     fontSize: 14,\r\n                     fontWeight: FontWeight.bold,\r\n                   ),\r\n                 ),\r\n+                style: TextButton.styleFrom(\r\n+                  padding: EdgeInsets.zero, // No padding to keep it minimal\r\n+                  tapTargetSize: MaterialTapTargetSize.shrinkWrap, // Compact button\r\n+                ),\r\n               ),\r\n             ),\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1729359272364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,10 @@\n         padding: const EdgeInsets.all(16),\r\n         child: Column(\r\n           crossAxisAlignment: CrossAxisAlignment.start,\r\n           children: [\r\n-            // Date Picker for Notification\r\n-            GestureDetector(\r\n+            // Date Picker for Notification (Styled as a Button)\r\n+            InkWell(\r\n               onTap: () async {\r\n                 DateTime? newDate = await showDatePicker(\r\n                   context: context,\r\n                   initialDate: selectedDate,\r\n@@ -40,27 +40,36 @@\n                 if (newDate != null) {\r\n                   idCardsCubit.updateNotification(index, newDate);\r\n                 }\r\n               },\r\n-              child: Row(\r\n-                children: [\r\n-                  const Icon(Icons.calendar_today_outlined,\r\n-                      color: Colors.indigoAccent),\r\n-                  const SizedBox(width: 8),\r\n-                  Text(\r\n-                    DateFormat('yyyy-MM-dd').format(selectedDate),\r\n-                    style: const TextStyle(\r\n-                      fontSize: 16,\r\n-                      color: Colors.black,\r\n-                      fontWeight: FontWeight.bold,\r\n+              borderRadius: BorderRadius.circular(8),\r\n+              splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n+              child: Container(\r\n+                padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n+                decoration: BoxDecoration(\r\n+                  color: Colors.indigoAccent.withOpacity(0.1), // Subtle background\r\n+                  borderRadius: BorderRadius.circular(8),\r\n+                ),\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(Icons.calendar_today_outlined, color: Colors.indigoAccent),\r\n+                    const SizedBox(width: 8),\r\n+                    Text(\r\n+                      DateFormat('yyyy-MM-dd').format(selectedDate),\r\n+                      style: const TextStyle(\r\n+                        fontSize: 16,\r\n+                        color: Colors.indigoAccent,\r\n+                        fontWeight: FontWeight.bold,\r\n+                        decoration: TextDecoration.underline, // Underline for interactivity\r\n+                      ),\r\n                     ),\r\n-                  ),\r\n-                ],\r\n+                  ],\r\n+                ),\r\n               ),\r\n             ),\r\n             const SizedBox(height: 20),\r\n \r\n-            // Time Picker Button\r\n+            // Time Picker Button (Unchanged)\r\n             InkWell(\r\n               onTap: () async {\r\n                 TimeOfDay? time = await showTimePicker(\r\n                   context: context,\r\n@@ -79,10 +88,9 @@\n               },\r\n               borderRadius: BorderRadius.circular(8),\r\n               splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n               child: Container(\r\n-                padding:\r\n-                    const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n+                padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n                 decoration: BoxDecoration(\r\n                   color: Colors.indigoAccent.withOpacity(0.1),\r\n                   borderRadius: BorderRadius.circular(8),\r\n                 ),\r\n@@ -103,14 +111,13 @@\n               ),\r\n             ),\r\n             const Divider(height: 24),\r\n \r\n-            // Remove Notification Button (simplified)\r\n+            // Remove Notification Button (Unchanged)\r\n             Align(\r\n               alignment: Alignment.centerRight,\r\n               child: TextButton.icon(\r\n-                onPressed: () =>\r\n-                    idCardsCubit.removeNotification(context, index),\r\n+                onPressed: () => idCardsCubit.removeNotification(context, index),\r\n                 icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n                 label: const Text(\r\n                   'Remove',\r\n                   style: TextStyle(\r\n@@ -119,11 +126,10 @@\n                     fontWeight: FontWeight.bold,\r\n                   ),\r\n                 ),\r\n                 style: TextButton.styleFrom(\r\n-                  padding: EdgeInsets.zero, // No padding to keep it minimal\r\n-                  tapTargetSize:\r\n-                      MaterialTapTargetSize.shrinkWrap, // Compact button\r\n+                  padding: EdgeInsets.zero,\r\n+                  tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n                 ),\r\n               ),\r\n             ),\r\n           ],\r\n"
                },
                {
                    "date": 1729359352316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,28 +43,24 @@\n               },\r\n               borderRadius: BorderRadius.circular(8),\r\n               splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n               child: Container(\r\n-                padding:\r\n-                    const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n+                padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n                 decoration: BoxDecoration(\r\n-                  color:\r\n-                      Colors.indigoAccent.withOpacity(0.1), // Subtle background\r\n+                  color: Colors.indigoAccent.withOpacity(0.1), // Subtle background\r\n                   borderRadius: BorderRadius.circular(8),\r\n                 ),\r\n                 child: Row(\r\n                   children: [\r\n-                    const Icon(Icons.calendar_today_outlined,\r\n-                        color: Colors.indigoAccent),\r\n+                    const Icon(Icons.calendar_today_outlined, color: Colors.indigoAccent),\r\n                     const SizedBox(width: 8),\r\n                     Text(\r\n-                      DateFormat('yyyy-MM-dd').format(selectedDate),\r\n+                      DateFormat('dd.MM.yyyy').format(selectedDate), // Updated format to dd.MM.yyyy\r\n                       style: const TextStyle(\r\n                         fontSize: 16,\r\n                         color: Colors.indigoAccent,\r\n                         fontWeight: FontWeight.bold,\r\n-                        decoration: TextDecoration\r\n-                            .underline, // Underline for interactivity\r\n+                        decoration: TextDecoration.underline, // Underline for interactivity\r\n                       ),\r\n                     ),\r\n                   ],\r\n                 ),\r\n@@ -92,10 +88,9 @@\n               },\r\n               borderRadius: BorderRadius.circular(8),\r\n               splashColor: Colors.indigoAccent.withOpacity(0.1),\r\n               child: Container(\r\n-                padding:\r\n-                    const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n+                padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),\r\n                 decoration: BoxDecoration(\r\n                   color: Colors.indigoAccent.withOpacity(0.1),\r\n                   borderRadius: BorderRadius.circular(8),\r\n                 ),\r\n@@ -120,10 +115,9 @@\n             // Remove Notification Button (Unchanged)\r\n             Align(\r\n               alignment: Alignment.centerRight,\r\n               child: TextButton.icon(\r\n-                onPressed: () =>\r\n-                    idCardsCubit.removeNotification(context, index),\r\n+                onPressed: () => idCardsCubit.removeNotification(context, index),\r\n                 icon: const Icon(Icons.delete_outline, color: Colors.redAccent),\r\n                 label: const Text(\r\n                   'Remove',\r\n                   style: TextStyle(\r\n"
                }
            ],
            "date": 1729358878739,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass NotificationItem extends StatelessWidget {\r\n  const NotificationItem({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}\r\n"
        }
    ]
}