{
    "sourceFile": "lib/feature/reminders_viewer/screens/reminders_viewer_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1729150789790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729150796442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,14 @@\n   const RemindersViewerScreen({super.key});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text('Reminders Viewer'),\r\n+      ),\r\n+      body: const Center(\r\n+        child: Text('Reminders Viewer Screen'),\r\n+      ),\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1729150818264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,13 @@\n+import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class RemindersViewerScreen extends StatelessWidget {\r\n   const RemindersViewerScreen({super.key});\r\n \r\n+  static const path = 'reminders_viewer_screen';\r\n+  static const absolutePath = '${HomeScreen.path}/$path';\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n"
                },
                {
                    "date": 1729351606721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,74 @@\n-import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n+import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class RemindersViewerScreen extends StatelessWidget {\r\n   const RemindersViewerScreen({super.key});\r\n \r\n   static const path = 'reminders_viewer_screen';\r\n-  static const absolutePath = '${HomeScreen.path}/$path';\r\n+  static const absolutePath = 'home_screen/$path';\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: const Text('Reminders Viewer'),\r\n       ),\r\n-      body: const Center(\r\n-        child: Text('Reminders Viewer Screen'),\r\n+      body: StreamBuilder<QuerySnapshot>(\r\n+        stream: FirebaseFirestore.instance\r\n+            .collection('users')\r\n+            .doc('YI3z5ZLmmNQhPqFcWDArrU1gGi2') // Replace with dynamic user ID\r\n+            .collection('id_cards')\r\n+            .snapshots(),\r\n+        builder: (context, snapshot) {\r\n+          if (snapshot.connectionState == ConnectionState.waiting) {\r\n+            return const Center(child: CircularProgressIndicator());\r\n+          }\r\n+\r\n+          if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {\r\n+            return const Center(child: Text('No ID cards found.'));\r\n+          }\r\n+\r\n+          final documents = snapshot.data!.docs;\r\n+\r\n+          return ListView.builder(\r\n+            itemCount: documents.length,\r\n+            itemBuilder: (context, index) {\r\n+              final data = documents[index].data() as Map<String, dynamic>;\r\n+\r\n+              return Card(\r\n+                margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+                shape: RoundedRectangleBorder(\r\n+                  borderRadius: BorderRadius.circular(15.0),\r\n+                ),\r\n+                elevation: 4,\r\n+                child: ListTile(\r\n+                  contentPadding: const EdgeInsets.all(16),\r\n+                  title: Text(\r\n+                    data['name'] ?? 'Unknown Name',\r\n+                    style: const TextStyle(\r\n+                      fontSize: 18,\r\n+                      fontWeight: FontWeight.bold,\r\n+                    ),\r\n+                  ),\r\n+                  subtitle: Column(\r\n+                    crossAxisAlignment: CrossAxisAlignment.start,\r\n+                    children: [\r\n+                      Text('Expiration: ${data['exp'] ?? 'N/A'}'),\r\n+                      const SizedBox(height: 4),\r\n+                      Text('Timestamp: ${data['timestamp'] ?? 'N/A'}'),\r\n+                    ],\r\n+                  ),\r\n+                  trailing: const Icon(Icons.arrow_forward_ios),\r\n+                  onTap: () {\r\n+                    // You can navigate to a details page or perform some action\r\n+                    // when an ID card is tapped.\r\n+                  },\r\n+                ),\r\n+              );\r\n+            },\r\n+          );\r\n+        },\r\n       ),\r\n     );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1729351622539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n+import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class RemindersViewerScreen extends StatelessWidget {\r\n   const RemindersViewerScreen({super.key});\r\n \r\n   static const path = 'reminders_viewer_screen';\r\n-  static const absolutePath = 'home_screen/$path';\r\n+  static const absolutePath = '${HomeScreen.path}/$path';\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n"
                },
                {
                    "date": 1729351874369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:auto_asig/core/data/http_data.dart';\r\n import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n@@ -14,13 +15,9 @@\n       appBar: AppBar(\r\n         title: const Text('Reminders Viewer'),\r\n       ),\r\n       body: StreamBuilder<QuerySnapshot>(\r\n-        stream: FirebaseFirestore.instance\r\n-            .collection('users')\r\n-            .doc('YI3z5ZLmmNQhPqFcWDArrU1gGi2') // Replace with dynamic user ID\r\n-            .collection('id_cards')\r\n-            .snapshots(),\r\n+        stream: getIdCardsStream(),\r\n         builder: (context, snapshot) {\r\n           if (snapshot.connectionState == ConnectionState.waiting) {\r\n             return const Center(child: CircularProgressIndicator());\r\n           }\r\n"
                },
                {
                    "date": 1729352032126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n+import 'package:auto_asig/core/cubit/user_data_cubit.dart';\r\n import 'package:auto_asig/core/data/http_data.dart';\r\n import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class RemindersViewerScreen extends StatelessWidget {\r\n   const RemindersViewerScreen({super.key});\r\n \r\n@@ -10,8 +12,11 @@\n   static const absolutePath = '${HomeScreen.path}/$path';\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n+    // get the id for the current user\r\n+    final userId = context.read<UserDataCubit>().state.member.id;\r\n+\r\n     return Scaffold(\r\n       appBar: AppBar(\r\n         title: const Text('Reminders Viewer'),\r\n       ),\r\n"
                },
                {
                    "date": 1729352051294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n       appBar: AppBar(\r\n         title: const Text('Reminders Viewer'),\r\n       ),\r\n       body: StreamBuilder<QuerySnapshot>(\r\n-        stream: getIdCardsStream(),\r\n+        stream: getIdCardsStream(userId),\r\n         builder: (context, snapshot) {\r\n           if (snapshot.connectionState == ConnectionState.waiting) {\r\n             return const Center(child: CircularProgressIndicator());\r\n           }\r\n"
                },
                {
                    "date": 1729352216761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n           return ListView.builder(\r\n             itemCount: documents.length,\r\n             itemBuilder: (context, index) {\r\n               final data = documents[index].data() as Map<String, dynamic>;\r\n+              final DateTime expiringDate = data['exp'] as DateTime;\r\n \r\n               return Card(\r\n                 margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                 shape: RoundedRectangleBorder(\r\n@@ -56,10 +57,10 @@\n                   subtitle: Column(\r\n                     crossAxisAlignment: CrossAxisAlignment.start,\r\n                     children: [\r\n                       Text('Expiration: ${data['exp'] ?? 'N/A'}'),\r\n-                      const SizedBox(height: 4),\r\n-                      Text('Timestamp: ${data['timestamp'] ?? 'N/A'}'),\r\n+                      // const SizedBox(height: 4),\r\n+                      // Text('Timestamp: ${data['timestamp'] ?? 'N/A'}'),\r\n                     ],\r\n                   ),\r\n                   trailing: const Icon(Icons.arrow_forward_ios),\r\n                   onTap: () {\r\n"
                },
                {
                    "date": 1729352258061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import 'package:auto_asig/core/cubit/user_data_cubit.dart';\r\n+import 'package:auto_asig/core/data/assistants.dart';\r\n import 'package:auto_asig/core/data/http_data.dart';\r\n import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n import 'package:cloud_firestore/cloud_firestore.dart';\r\n import 'package:flutter/material.dart';\r\n@@ -36,9 +37,10 @@\n           return ListView.builder(\r\n             itemCount: documents.length,\r\n             itemBuilder: (context, index) {\r\n               final data = documents[index].data() as Map<String, dynamic>;\r\n-              final DateTime expiringDate = data['exp'] as DateTime;\r\n+              final DateTime? expiringDate =\r\n+                  convertTimestampToDateTime(data['exp']);\r\n \r\n               return Card(\r\n                 margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                 shape: RoundedRectangleBorder(\r\n@@ -56,9 +58,9 @@\n                   ),\r\n                   subtitle: Column(\r\n                     crossAxisAlignment: CrossAxisAlignment.start,\r\n                     children: [\r\n-                      Text('Expiration: ${data['exp'] ?? 'N/A'}'),\r\n+                      Text('Expiration: ${expiringDate ?? 'N/A'}'),\r\n                       // const SizedBox(height: 4),\r\n                       // Text('Timestamp: ${data['timestamp'] ?? 'N/A'}'),\r\n                     ],\r\n                   ),\r\n"
                },
                {
                    "date": 1729352420155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,12 @@\n             itemBuilder: (context, index) {\r\n               final data = documents[index].data() as Map<String, dynamic>;\r\n               final DateTime? expiringDate =\r\n                   convertTimestampToDateTime(data['exp']);\r\n+                  final List<Timestamp> notifications = data['notifications'];\r\n \r\n+                  final List<DateTime> notificationDates = notifications.map((e) => e.toDate()).toList();\r\n+\r\n               return Card(\r\n                 margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n                 shape: RoundedRectangleBorder(\r\n                   borderRadius: BorderRadius.circular(15.0),\r\n"
                },
                {
                    "date": 1729352443373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n               final data = documents[index].data() as Map<String, dynamic>;\r\n               final DateTime? expiringDate =\r\n                   convertTimestampToDateTime(data['exp']);\r\n               final List<Timestamp> notifications = data['notifications'];\r\n-\r\n               final List<DateTime> notificationDates =\r\n                   notifications.map((e) => e.toDate()).toList();\r\n \r\n               return Card(\r\n"
                },
                {
                    "date": 1729352492524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,51 +33,56 @@\n           }\r\n \r\n           final documents = snapshot.data!.docs;\r\n \r\n-          return ListView.builder(\r\n-            itemCount: documents.length,\r\n-            itemBuilder: (context, index) {\r\n-              final data = documents[index].data() as Map<String, dynamic>;\r\n-              final DateTime? expiringDate =\r\n-                  convertTimestampToDateTime(data['exp']);\r\n-              final List<Timestamp> notifications = data['notifications'];\r\n-              final List<DateTime> notificationDates =\r\n-                  notifications.map((e) => e.toDate()).toList();\r\n+         return ListView.builder(\r\n+  itemCount: documents.length,\r\n+  itemBuilder: (context, index) {\r\n+    final data = documents[index].data() as Map<String, dynamic>;\r\n \r\n-              return Card(\r\n-                margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n-                shape: RoundedRectangleBorder(\r\n-                  borderRadius: BorderRadius.circular(15.0),\r\n-                ),\r\n-                elevation: 4,\r\n-                child: ListTile(\r\n-                  contentPadding: const EdgeInsets.all(16),\r\n-                  title: Text(\r\n-                    data['name'] ?? 'Unknown Name',\r\n-                    style: const TextStyle(\r\n-                      fontSize: 18,\r\n-                      fontWeight: FontWeight.bold,\r\n-                    ),\r\n-                  ),\r\n-                  subtitle: Column(\r\n-                    crossAxisAlignment: CrossAxisAlignment.start,\r\n-                    children: [\r\n-                      Text('Expiration: ${expiringDate ?? 'N/A'}'),\r\n-                      // const SizedBox(height: 4),\r\n-                      // Text('Timestamp: ${data['timestamp'] ?? 'N/A'}'),\r\n-                    ],\r\n-                  ),\r\n-                  trailing: const Icon(Icons.arrow_forward_ios),\r\n-                  onTap: () {\r\n-                    // You can navigate to a details page or perform some action\r\n-                    // when an ID card is tapped.\r\n-                  },\r\n-                ),\r\n-              );\r\n-            },\r\n-          );\r\n+    // Convert Firestore Timestamp to DateTime for the expiration date\r\n+    final DateTime? expiringDate = convertTimestampToDateTime(data['exp']);\r\n+    \r\n+    // Convert Firestore Timestamps (notifications) to DateTime\r\n+    final List<Timestamp> notifications = (data['notifications'] as List<dynamic>).cast<Timestamp>();\r\n+    final List<DateTime> notificationDates = notifications.map((e) => e.toDate()).toList();\r\n+\r\n+    return Card(\r\n+      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n+      shape: RoundedRectangleBorder(\r\n+        borderRadius: BorderRadius.circular(15.0),\r\n+      ),\r\n+      elevation: 4,\r\n+      child: ListTile(\r\n+        contentPadding: const EdgeInsets.all(16),\r\n+        title: Text(\r\n+          data['name'] ?? 'Unknown Name',\r\n+          style: const TextStyle(\r\n+            fontSize: 18,\r\n+            fontWeight: FontWeight.bold,\r\n+          ),\r\n+        ),\r\n+        subtitle: Column(\r\n+          crossAxisAlignment: CrossAxisAlignment.start,\r\n+          children: [\r\n+            Text('Expiration Date: ${expiringDate != null ? expiringDate.toLocal().toString().split(' ')[0] : 'N/A'}'),\r\n+            const SizedBox(height: 8),\r\n+            if (notificationDates.isNotEmpty) \r\n+              Text('Notifications:'),\r\n+            for (var date in notificationDates) \r\n+              Text('• ${date.toLocal().toString().split(' ')[0]}'),\r\n+          ],\r\n+        ),\r\n+        trailing: const Icon(Icons.arrow_forward_ios),\r\n+        onTap: () {\r\n+          // Handle tapping on the card, e.g., open a detailed view\r\n         },\r\n       ),\r\n     );\r\n+  },\r\n+);\r\n+\r\n+        },\r\n+      ),\r\n+    );\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1729150789790,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nclass RemindersViewerScreen extends StatelessWidget {\r\n  const RemindersViewerScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container();\r\n  }\r\n}"
        }
    ]
}