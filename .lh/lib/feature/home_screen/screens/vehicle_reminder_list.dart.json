{
    "sourceFile": "lib/feature/home_screen/screens/vehicle_reminder_list.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1730988893244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730989083899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,41 +34,93 @@\n               final vehicleReminder = vehicleReminders[index];\n               final List<Widget> expirationItems =\n                   _buildExpirationItems(vehicleReminder);\n \n+              // return ExpansionTile(\n+              //   title: Padding(\n+              //     padding: const EdgeInsets.only(left: padding),\n+              //     child: Text(\n+              //       '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n+              //       style: const TextStyle(\n+              //         fontWeight: FontWeight.bold,\n+              //         fontSize: 18,\n+              //       ),\n+              //     ),\n+              //   ),\n+              //   children: [\n+              //     ...expirationItems,\n+              //     Padding(\n+              //       padding: const EdgeInsets.symmetric(\n+              //           horizontal: 16.0, vertical: 8.0),\n+              //       child: ElevatedButton(\n+              //         onPressed: () {\n+              //           _deleteVehicle(context, vehicleReminder);\n+              //         },\n+              //         style: ElevatedButton.styleFrom(\n+              //           backgroundColor: Colors.red,\n+              //         ),\n+              //         child: const Text(\n+              //           'Șterge Vehicul',\n+              //           style: TextStyle(\n+              //             color: Colors.white,\n+              //           ),\n+              //         ),\n+              //       ),\n+              //     ),\n+              //   ],\n+              // );\n               return ExpansionTile(\n-                title: Padding(\n-                  padding: const EdgeInsets.only(left: padding),\n-                  child: Text(\n-                    '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n-                    style: const TextStyle(\n-                      fontWeight: FontWeight.bold,\n-                      fontSize: 18,\n-                    ),\n-                  ),\n-                ),\n-                children: [\n-                  ...expirationItems,\n-                  Padding(\n-                    padding: const EdgeInsets.symmetric(\n-                        horizontal: 16.0, vertical: 8.0),\n-                    child: ElevatedButton(\n-                      onPressed: () {\n-                        _deleteVehicle(context, vehicleReminder);\n-                      },\n-                      style: ElevatedButton.styleFrom(\n-                        backgroundColor: Colors.red,\n-                      ),\n-                      child: const Text(\n-                        'Șterge Vehicul',\n-                        style: TextStyle(\n-                          color: Colors.white,\n-                        ),\n-                      ),\n-                    ),\n-                  ),\n-                ],\n-              );\n+  title: Container(\n+    padding: const EdgeInsets.only(left: 16, right: 16, top: 8, bottom: 8),\n+    decoration: BoxDecoration(\n+      color: Colors.grey.shade200, // Subtle background color\n+      borderRadius: BorderRadius.circular(8), // Rounded corners for modern look\n+      boxShadow: [\n+        BoxShadow(\n+          color: Colors.grey.withOpacity(0.2),\n+          spreadRadius: 2,\n+          blurRadius: 5,\n+          offset: Offset(0, 3), // Shadow position\n+        ),\n+      ],\n+    ),\n+    child: Row(\n+      children: [\n+        Icon(Icons.directions_car, color: Colors.blueAccent), // Car icon for context\n+        SizedBox(width: 8), // Spacing between icon and text\n+        Text(\n+          '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n+          style: const TextStyle(\n+            fontWeight: FontWeight.bold,\n+            fontSize: 20, // Increased font size\n+            color: Colors.black87, // Adjust color to contrast background\n+          ),\n+        ),\n+      ],\n+    ),\n+  ),\n+  children: [\n+    ...expirationItems,\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),\n+      child: ElevatedButton(\n+        onPressed: () {\n+          _deleteVehicle(context, vehicleReminder);\n+        },\n+        style: ElevatedButton.styleFrom(\n+          backgroundColor: Colors.red,\n+        ),\n+        child: const Text(\n+          'Șterge Vehicul',\n+          style: TextStyle(\n+            color: Colors.white,\n+          ),\n+        ),\n+      ),\n+    ),\n+  ],\n+);\n+\n             },\n           );\n         } else {\n           return const Center(child: Text('Eroare necunoscută.'));\n"
                },
                {
                    "date": 1730989113817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,11 +86,11 @@\n                     ],\n                   ),\n                   child: Row(\n                     children: [\n-                      Icon(Icons.directions_car,\n+                      const Icon(Icons.directions_car,\n                           color: Colors.blueAccent), // Car icon for context\n-                      SizedBox(width: 8), // Spacing between icon and text\n+                      const SizedBox(width: 8), // Spacing between icon and text\n                       Text(\n                         '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n                         style: const TextStyle(\n                           fontWeight: FontWeight.bold,\n"
                },
                {
                    "date": 1730989119771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                       const Icon(Icons.directions_car,\n                           color: Colors.blueAccent), // Car icon for context\n                       const SizedBox(width: 8), // Spacing between icon and text\n                       Text(\n-                        '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n+                        '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel.toUpperCase()}',\n                         style: const TextStyle(\n                           fontWeight: FontWeight.bold,\n                           fontSize: 20, // Increased font size\n                           color: Colors\n"
                }
            ],
            "date": 1730988893244,
            "name": "Commit-0",
            "content": "import 'package:auto_asig/core/data/constants.dart';\nimport 'package:auto_asig/core/models/notification_model.dart';\nimport 'package:auto_asig/core/models/vehicle_reminder.dart';\nimport 'package:auto_asig/feature/home_screen/cubit/reminder_cubit.dart';\nimport 'package:auto_asig/feature/home_screen/cubit/reminder_state.dart';\nimport 'package:auto_asig/feature/home_screen/helpers/bottom_sheet_helpers.dart';\nimport 'package:auto_asig/feature/home_screen/widgets/vehicle_notif_item.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_bloc/flutter_bloc.dart';\n\nclass VehicleReminderList extends StatelessWidget {\n  const VehicleReminderList({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return BlocBuilder<ReminderCubit, ReminderState>(\n      builder: (context, state) {\n        if (state is ReminderLoading) {\n          return const Center(child: CircularProgressIndicator());\n        } else if (state is ReminderError) {\n          return Center(child: Text(state.message));\n        } else if (state is ReminderLoaded) {\n          final vehicleReminders = state.vehicleReminders;\n\n          if (vehicleReminders == null || vehicleReminders.isEmpty) {\n            return const Center(\n              child: Text('Nu ai vehicule înregistrate.'),\n            );\n          }\n\n          return ListView.builder(\n            itemCount: vehicleReminders.length,\n            itemBuilder: (context, index) {\n              final vehicleReminder = vehicleReminders[index];\n              final List<Widget> expirationItems =\n                  _buildExpirationItems(vehicleReminder);\n\n              return ExpansionTile(\n                title: Padding(\n                  padding: const EdgeInsets.only(left: padding),\n                  child: Text(\n                    '${vehicleReminder.registrationNumber.toUpperCase()} - ${vehicleReminder.carModel}',\n                    style: const TextStyle(\n                      fontWeight: FontWeight.bold,\n                      fontSize: 18,\n                    ),\n                  ),\n                ),\n                children: [\n                  ...expirationItems,\n                  Padding(\n                    padding: const EdgeInsets.symmetric(\n                        horizontal: 16.0, vertical: 8.0),\n                    child: ElevatedButton(\n                      onPressed: () {\n                        _deleteVehicle(context, vehicleReminder);\n                      },\n                      style: ElevatedButton.styleFrom(\n                        backgroundColor: Colors.red,\n                      ),\n                      child: const Text(\n                        'Șterge Vehicul',\n                        style: TextStyle(\n                          color: Colors.white,\n                        ),\n                      ),\n                    ),\n                  ),\n                ],\n              );\n            },\n          );\n        } else {\n          return const Center(child: Text('Eroare necunoscută.'));\n        }\n      },\n    );\n  }\n\n  List<Widget> _buildExpirationItems(VehicleReminder vehicleReminder) {\n    List<Widget> items = [];\n\n    void addItem(String title, DateTime expirationDate) {\n      final remainingTime = expirationDate.difference(DateTime.now()).inDays;\n      final days = remainingTime.abs();\n\n      List<NotificationModel> notifications = [];\n\n      if (title == 'ITP') {\n        notifications = vehicleReminder.notificationsITP;\n      } else if (title == 'RCA') {\n        notifications = vehicleReminder.notificationsRCA;\n      } else if (title == 'CASCO') {\n        notifications = vehicleReminder.notificationsCASCO;\n      } else if (title == 'Rovinieta') {\n        notifications = vehicleReminder.notificationsRovinieta;\n      } else if (title == 'Tahograf') {\n        notifications = vehicleReminder.notificationsTahograf;\n      }\n\n      items.add(\n        VehicleReminderItem(\n          title: title,\n          progressValue: days,\n          actionText: 'Detalii',\n          notifications: notifications,\n          isExpired: remainingTime < 0,\n        ),\n      );\n    }\n\n    if (vehicleReminder.expirationDateITP != null) {\n      addItem('ITP', vehicleReminder.expirationDateITP!);\n    }\n    if (vehicleReminder.expirationDateRCA != null) {\n      addItem('RCA', vehicleReminder.expirationDateRCA!);\n    }\n    if (vehicleReminder.expirationDateCASCO != null) {\n      addItem('CASCO', vehicleReminder.expirationDateCASCO!);\n    }\n    if (vehicleReminder.expirationDateRovinieta != null) {\n      addItem('Rovinieta', vehicleReminder.expirationDateRovinieta!);\n    }\n    if (vehicleReminder.expirationDateTahograf != null) {\n      addItem('Tahograf', vehicleReminder.expirationDateTahograf!);\n    }\n\n    return items;\n  }\n\n  // Method to delete a vehicle reminder\n  void _deleteVehicle(BuildContext context, VehicleReminder vehicleReminder) {\n    // show a confirmation dialog\n    showDeletionConfirmation(\n      context,\n      title: 'Ștergere Vehicul',\n      content:\n          'Ești sigur că dorești să ștergi vehiculul înregistrat? Această acțiune este ireversibilă.',\n      onConfirm: () {\n        context.read<ReminderCubit>().deleteVehicleReminder(vehicleReminder);\n      },\n    );\n  }\n}\n"
        }
    ]
}