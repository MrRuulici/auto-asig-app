{
    "sourceFile": "lib/feature/home_screen/widgets/bottom_sheet_notification.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1730900037210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730902230102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             ],\r\n           ),\r\n           Row(\r\n             children: [\r\n-              const Text('Data Notificarii:'),\r\n+              const Text('Data NotificÄƒrii:'),\r\n               const SizedBox(width: 8),\r\n               TextButton(\r\n                 onPressed: () async {\r\n                   DateTime now = DateTime.now();\r\n"
                },
                {
                    "date": 1730902503482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,22 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return ListTile(\r\n-      title: Text(\r\n-        'Notificare ${index + 1}',\r\n-        style: const TextStyle(fontWeight: FontWeight.bold),\r\n+      title: Row(\r\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+        children: [\r\n+          Text(\r\n+            'Notificare ${index + 1}',\r\n+            style: const TextStyle(fontWeight: FontWeight.bold),\r\n+          ),\r\n+          IconButton(\r\n+            icon: const Icon(Icons.close, color: Colors.red),\r\n+            onPressed: () {\r\n+              _deleteNotification(context);\r\n+            },\r\n+          ),\r\n+        ],\r\n       ),\r\n       subtitle: Column(\r\n         crossAxisAlignment: CrossAxisAlignment.start,\r\n         children: [\r\n@@ -27,28 +38,34 @@\n             children: [\r\n               Checkbox(\r\n                 value: notification.sms,\r\n                 onChanged: (value) {\r\n-                  // Logic to update SMS notification\r\n-                  print('SMS notification updated');\r\n+                  context.read<BottomSheetDetailsCubit>().updateNotification(\r\n+                        index,\r\n+                        notification.copyWith(sms: value),\r\n+                      );\r\n                 },\r\n               ),\r\n               const Text('SMS'),\r\n               const SizedBox(width: 16),\r\n               Checkbox(\r\n                 value: notification.email,\r\n                 onChanged: (value) {\r\n-                  // Logic to update Email notification\r\n-                  print('Email notification updated');\r\n+                  context.read<BottomSheetDetailsCubit>().updateNotification(\r\n+                        index,\r\n+                        notification.copyWith(email: value),\r\n+                      );\r\n                 },\r\n               ),\r\n               const Text('Email'),\r\n               const SizedBox(width: 16),\r\n               Checkbox(\r\n                 value: notification.push,\r\n                 onChanged: (value) {\r\n-                  // Logic to update Push notification\r\n-                  print('Push notification updated');\r\n+                  context.read<BottomSheetDetailsCubit>().updateNotification(\r\n+                        index,\r\n+                        notification.copyWith(push: value),\r\n+                      );\r\n                 },\r\n               ),\r\n               const Text('Push'),\r\n             ],\r\n@@ -97,5 +114,10 @@\n         ],\r\n       ),\r\n     );\r\n   }\r\n+\r\n+  // Helper function to delete notification\r\n+  void _deleteNotification(BuildContext context) {\r\n+    // context.read<BottomSheetDetailsCubit>().deleteNotification(index);\r\n+  }\r\n }\r\n"
                }
            ],
            "date": 1730900037210,
            "name": "Commit-0",
            "content": "import 'package:auto_asig/core/models/notification_model.dart';\r\nimport 'package:auto_asig/feature/home_screen/cubit/bottom_sheet_details_cubit.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\n\r\nclass BottomSheetNotification extends StatelessWidget {\r\n  const BottomSheetNotification({super.key, required this.index, required this.notification});\r\n\r\n  final int index;\r\n  final NotificationModel notification;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return ListTile(\r\n          title: Text(\r\n            'Notificare ${index + 1}',\r\n            style: const TextStyle(fontWeight: FontWeight.bold),\r\n          ),\r\n          subtitle: Column(\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              Row(\r\n                children: [\r\n                  Checkbox(\r\n                    value: notification.sms,\r\n                    onChanged: (value) {\r\n                      // Logic to update SMS notification\r\n                      print('SMS notification updated');\r\n                    },\r\n                  ),\r\n                  const Text('SMS'),\r\n                  const SizedBox(width: 16),\r\n                  Checkbox(\r\n                    value: notification.email,\r\n                    onChanged: (value) {\r\n                      // Logic to update Email notification\r\n                      print('Email notification updated');\r\n                    },\r\n                  ),\r\n                  const Text('Email'),\r\n                  const SizedBox(width: 16),\r\n                  Checkbox(\r\n                    value: notification.push,\r\n                    onChanged: (value) {\r\n                      // Logic to update Push notification\r\n                      print('Push notification updated');\r\n                    },\r\n                  ),\r\n                  const Text('Push'),\r\n                ],\r\n              ),\r\n              Row(\r\n                children: [\r\n                  const Text('Data Notificarii:'),\r\n                  const SizedBox(width: 8),\r\n                  TextButton(\r\n                    onPressed: () async {\r\n                      DateTime now = DateTime.now();\r\n                      DateTime lastDate = DateTime(9999);\r\n                      DateTime initialDate = notification.date.isAfter(lastDate)\r\n                          ? lastDate\r\n                          : notification.date;\r\n\r\n                      DateTime? pickedDate = await showDatePicker(\r\n                        context: context,\r\n                        initialDate: initialDate,\r\n                        firstDate: now,\r\n                        lastDate: lastDate,\r\n                      );\r\n\r\n                      if (pickedDate != null) {\r\n                        context\r\n                            .read<BottomSheetDetailsCubit>()\r\n                            .updateNotification(\r\n                              index,\r\n                              notification.copyWith(date: pickedDate),\r\n                            );\r\n                      }\r\n                    },\r\n                    child: Text(\r\n                      '${notification.date.day}-${notification.date.month}-${notification.date.year}',\r\n                    ),\r\n                  ),\r\n                  const Text('la:'),\r\n                  TextButton(\r\n                    onPressed: () async {\r\n                      // TODO - Implement time picker\r\n                    },\r\n                    child: Text(\r\n                      '${notification.date.hour}:${notification.date.minute}',\r\n                    ),\r\n                  ),\r\n                ],\r\n              ),\r\n            ],\r\n          ),\r\n        );\r\n  }\r\n}"
        }
    ]
}