{
    "sourceFile": "lib/feature/intro/screens/splash_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1728288448386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728288504812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import 'dart:io';\r\n \r\n+import 'package:auto_asig/core/cubit/user_data_cubit.dart';\r\n import 'package:auto_asig/core/data/constants.dart';\r\n import 'package:auto_asig/core/data/http_data.dart';\r\n+import 'package:auto_asig/core/dependency_injection/bloc_di.dart';\r\n import 'package:auto_asig/core/models/user.dart';\r\n import 'package:auto_asig/feature/auth/screens/login_screen.dart';\r\n import 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\r\n import 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\n@@ -10,8 +12,9 @@\n import 'package:auto_asig/feature/intro/screens/no_internet_screen.dart';\r\n import 'package:auto_asig/feature/intro/screens/old_version_screen.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n import 'package:go_router/go_router.dart';\r\n \r\n class SplashScreen extends StatefulWidget {\r\n   const SplashScreen({super.key});\r\n@@ -60,10 +63,17 @@\n     if (user != null) {\r\n       currentUserId = user.uid;\r\n \r\n       // Load user and members data\r\n-      await _loadUserAndMembers(user);\r\n+      final userModel = await _loadUserAndMembers(user);\r\n \r\n+      if (userModel == null) {\r\n+        \r\n+      _navigateTo(OnboardingScreen.path);\r\n+        return;\r\n+      }\r\n+      context.read<UserDataCubit>().setMember(userModel);\r\n+\r\n       // Navigate to Home or Onboarding Screen based on user data\r\n       _navigateTo(HomeScreen.path);\r\n     } else {\r\n       _navigateTo(OnboardingScreen.path);\r\n"
                },
                {
                    "date": 1728288518268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,9 @@\n       if (userModel == null) {\r\n         _navigateTo(OnboardingScreen.path);\r\n         return;\r\n       }\r\n+      \r\n       context.read<UserDataCubit>().setMember(userModel);\r\n \r\n       // Navigate to Home or Onboarding Screen based on user data\r\n       _navigateTo(HomeScreen.path);\r\n"
                }
            ],
            "date": 1728288448386,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\nimport 'package:auto_asig/core/data/constants.dart';\r\nimport 'package:auto_asig/core/data/http_data.dart';\r\nimport 'package:auto_asig/core/models/user.dart';\r\nimport 'package:auto_asig/feature/auth/screens/login_screen.dart';\r\nimport 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\r\nimport 'package:auto_asig/feature/home_screen/screens/home_screen.dart';\r\nimport 'package:auto_asig/feature/intro/screens/maintenance_screen.dart';\r\nimport 'package:auto_asig/feature/intro/screens/no_internet_screen.dart';\r\nimport 'package:auto_asig/feature/intro/screens/old_version_screen.dart';\r\nimport 'package:firebase_auth/firebase_auth.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:go_router/go_router.dart';\r\n\r\nclass SplashScreen extends StatefulWidget {\r\n  const SplashScreen({super.key});\r\n\r\n  static const path = '/';\r\n\r\n  @override\r\n  State<SplashScreen> createState() => _SplashScreenState();\r\n}\r\n\r\nclass _SplashScreenState extends State<SplashScreen> {\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _initializeSplashScreen();\r\n  }\r\n\r\n  Future<void> _initializeSplashScreen() async {\r\n    // Step 1: Check Internet Access\r\n    bool hasInternet = await hasInternetAccess();\r\n    if (!hasInternet) {\r\n      _navigateTo(NoInternetScreen.path);\r\n      return;\r\n    }\r\n\r\n    // Step 2: Fetch App Data (Check for Maintenance or Version Issues)\r\n    Map<String, bool>? appData = await getAppData();\r\n    if (appData == null) {\r\n      _navigateTo(LoginScreen.absolutePath);\r\n      return;\r\n    }\r\n\r\n    bool isMaintenance = appData['isMaintenance']!;\r\n    bool isUpToDate = appData['isUpToDate']!;\r\n\r\n    if (isMaintenance) {\r\n      _navigateTo(MaintenanceScreen.path);\r\n      return;\r\n    } else if (!isUpToDate) {\r\n      _navigateTo(OldVersionScreen.path);\r\n      return;\r\n    }\r\n\r\n    // Step 3: Check User Authentication and Load Members\r\n    User? user = await FirebaseAuth.instance.authStateChanges().first;\r\n    if (user != null) {\r\n      currentUserId = user.uid;\r\n\r\n      // Load user and members data\r\n      await _loadUserAndMembers(user);\r\n\r\n\r\n\r\n      // Navigate to Home or Onboarding Screen based on user data\r\n      _navigateTo(HomeScreen.path);\r\n    } else {\r\n      _navigateTo(OnboardingScreen.path);\r\n    }\r\n  }\r\n\r\n  Future<bool> hasInternetAccess() async {\r\n    try {\r\n      final result = await InternetAddress.lookup('google.com');\r\n      return result.isNotEmpty;\r\n    } on SocketException {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  Future<UserModel?> _loadUserAndMembers(User user) async {\r\n    UserModel? member = await readUserData(user.uid);\r\n    if (member != null) {\r\n      \r\n      UserModel userModel = UserModel(\r\n        member.id,\r\n        fullName: member.fullName,\r\n        email: member.email,\r\n        phone: member.phone,\r\n      );\r\n\r\n      return userModel;\r\n\r\n    } else {\r\n      // Logout and navigate to login if member data is missing\r\n      await FirebaseAuth.instance.signOut();\r\n      _navigateTo(LoginScreen.absolutePath);\r\n    }\r\n  }\r\n\r\n  void _navigateTo(String route) {\r\n    WidgetsBinding.instance.addPostFrameCallback((_) {\r\n      context.go(route);\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Container(\r\n        color: Colors.white,\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: [\r\n            // Add a logo here\r\n            Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 160),\r\n              // child: Image.asset('assets/images/logo_fra.jpg'),\r\n              child: Container(\r\n                color: Colors.amber,\r\n                width: 200,\r\n                height: 75,\r\n              ),\r\n            ),\r\n            const SizedBox(height: 16),\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              children: [\r\n                const CircularProgressIndicator(color: Colors.blue),\r\n                const SizedBox(width: 16),\r\n                const Text(\r\n                  'Se încarcă...',\r\n                  style: TextStyle(fontSize: 16),\r\n                ),\r\n              ],\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}