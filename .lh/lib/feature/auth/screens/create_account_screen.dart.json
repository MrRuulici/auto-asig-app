{
    "sourceFile": "lib/feature/auth/screens/create_account_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1728305206737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730883507349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,135 +1,135 @@\n-import 'package:auto_asig/core/data/constants.dart';\n-import 'package:auto_asig/core/widgets/custom_btn.dart';\n-import 'package:auto_asig/feature/auth/cubit/registration_cubit.dart';\n-import 'package:auto_asig/feature/auth/cubit/registration_state.dart';\n-import 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-\n-class CreateAccountScreen extends StatelessWidget {\n-  CreateAccountScreen({super.key});\n-\n-  static const path = 'create_account_screen';\n-  static const absolutPath = '${OnboardingScreen.path}/create_account_screen';\n-\n-  final TextEditingController emailController = TextEditingController();\n-  final TextEditingController passwordController = TextEditingController();\n-  final TextEditingController confirmPasswordController =\n-      TextEditingController();\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        title: const Text('Înregistrare'),\n-      ),\n-      body: BlocListener<RegistrationCubit, RegistrationState>(\n-        listener: (context, state) {\n-          if (state is RegistrationSuccess) {\n-            Navigator.pop(context);\n-          } else if (state is RegistrationFailure) {\n-            ScaffoldMessenger.of(context).showSnackBar(\n-              SnackBar(\n-                  content: Text(\n-                state.errorMessage,\n-                style: const TextStyle(fontSize: theFontSize),\n-              )),\n-            );\n-          }\n-        },\n-        child: Padding(\n-          padding: const EdgeInsets.all(padding),\n-          child: SingleChildScrollView(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              crossAxisAlignment: CrossAxisAlignment.stretch,\n-              children: <Widget>[\n-                const Text(\n-                  'Te rugăm să introduci datele de înregistrare pentru a putea accesa aplicația:',\n-                  textAlign: TextAlign.center,\n-                  style: TextStyle(fontSize: theFontSize),\n-                ),\n-                const SizedBox(height: 20),\n-                TextField(\n-                  style: const TextStyle(fontSize: theFontSize),\n-                  controller: emailController,\n-                  decoration: const InputDecoration(\n-                    labelText: 'Adresa ta de Email',\n-                    labelStyle: TextStyle(fontSize: theFontSize),\n-                  ),\n-                  keyboardType: TextInputType.emailAddress,\n-                ),\n-                const SizedBox(height: 20),\n-                TextField(\n-                  style: const TextStyle(fontSize: theFontSize),\n-                  controller: passwordController,\n-                  decoration: const InputDecoration(\n-                    labelText: 'Setează o parolă',\n-                    labelStyle: TextStyle(fontSize: theFontSize),\n-                    hintText: 'Parola ta',\n-                    hintStyle: TextStyle(fontSize: theFontSize),\n-                    helperText: 'Minim 6 caractere',\n-                  ),\n-                  obscureText: true,\n-                ),\n-                const SizedBox(height: 20),\n-                TextField(\n-                  style: const TextStyle(fontSize: theFontSize),\n-                  controller: confirmPasswordController,\n-                  decoration: const InputDecoration(\n-                    labelText: 'Confirma parola',\n-                    labelStyle: TextStyle(fontSize: theFontSize),\n-                    hintText: 'Parola ta',\n-                    hintStyle: TextStyle(fontSize: theFontSize),\n-                    helperText: 'Minim 6 caractere',\n-                  ),\n-                  obscureText: true,\n-                ),\n-              ],\n-            ),\n-          ),\n-        ),\n-      ),\n-      bottomNavigationBar: SafeArea(\n-        child: AsigButton(\n-          padding: const EdgeInsets.only(\n-            left: padding,\n-            right: padding,\n-            bottom: padding,\n-          ),\n-          onPressed: () {\n-            if (emailController.text.isEmpty ||\n-                passwordController.text.isEmpty) {\n-              ScaffoldMessenger.of(context).showSnackBar(\n-                const SnackBar(\n-                  content: Text(\n-                    'Te rugăm să completezi toate câmpurile',\n-                    style: TextStyle(fontSize: theFontSize),\n-                  ),\n-                ),\n-              );\n-              return;\n-            } else if (passwordController.text !=\n-                confirmPasswordController.text) {\n-              ScaffoldMessenger.of(context).showSnackBar(\n-                const SnackBar(\n-                  content: Text(\n-                    'Parolele nu se potrivesc',\n-                    style: TextStyle(fontSize: theFontSize),\n-                  ),\n-                ),\n-              );\n-              return;\n-            }\n-\n-            BlocProvider.of<RegistrationCubit>(context).register(\n-              email: emailController.text,\n-              password: passwordController.text,\n-            );\n-          },\n-          text: 'Înregistrează-te',\n-        ),\n-      ),\n-    );\n-  }\n-}\n+import 'package:auto_asig/core/data/constants.dart';\r\n+import 'package:auto_asig/core/widgets/custom_btn.dart';\r\n+import 'package:auto_asig/feature/auth/cubit/registration_cubit.dart';\r\n+import 'package:auto_asig/feature/auth/cubit/registration_state.dart';\r\n+import 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n+\r\n+class CreateAccountScreen extends StatelessWidget {\r\n+  CreateAccountScreen({super.key});\r\n+\r\n+  static const path = 'create_account_screen';\r\n+  static const absolutPath = '${OnboardingScreen.path}/create_account_screen';\r\n+\r\n+  final TextEditingController emailController = TextEditingController();\r\n+  final TextEditingController passwordController = TextEditingController();\r\n+  final TextEditingController confirmPasswordController =\r\n+      TextEditingController();\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text('Înregistrare'),\r\n+      ),\r\n+      body: BlocListener<RegistrationCubit, RegistrationState>(\r\n+        listener: (context, state) {\r\n+          if (state is RegistrationSuccess) {\r\n+            Navigator.pop(context);\r\n+          } else if (state is RegistrationFailure) {\r\n+            ScaffoldMessenger.of(context).showSnackBar(\r\n+              SnackBar(\r\n+                  content: Text(\r\n+                state.errorMessage,\r\n+                style: const TextStyle(fontSize: theFontSize),\r\n+              )),\r\n+            );\r\n+          }\r\n+        },\r\n+        child: Padding(\r\n+          padding: const EdgeInsets.all(padding),\r\n+          child: SingleChildScrollView(\r\n+            child: Column(\r\n+              mainAxisAlignment: MainAxisAlignment.start,\r\n+              crossAxisAlignment: CrossAxisAlignment.stretch,\r\n+              children: <Widget>[\r\n+                const Text(\r\n+                  'Te rugăm să introduci datele de înregistrare pentru a putea accesa aplicația:',\r\n+                  textAlign: TextAlign.center,\r\n+                  style: TextStyle(fontSize: theFontSize),\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: emailController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Adresa ta de Email',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                  keyboardType: TextInputType.emailAddress,\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: passwordController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Setează o parolă',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                    hintText: 'Parola ta',\r\n+                    hintStyle: TextStyle(fontSize: theFontSize),\r\n+                    helperText: 'Minim 6 caractere',\r\n+                  ),\r\n+                  obscureText: true,\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: confirmPasswordController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Confirma parola',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                    hintText: 'Parola ta',\r\n+                    hintStyle: TextStyle(fontSize: theFontSize),\r\n+                    helperText: 'Minim 6 caractere',\r\n+                  ),\r\n+                  obscureText: true,\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          ),\r\n+        ),\r\n+      ),\r\n+      bottomNavigationBar: SafeArea(\r\n+        child: AsigButton(\r\n+          padding: const EdgeInsets.only(\r\n+            left: padding,\r\n+            right: padding,\r\n+            bottom: padding,\r\n+          ),\r\n+          onPressed: () {\r\n+            if (emailController.text.isEmpty ||\r\n+                passwordController.text.isEmpty) {\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                const SnackBar(\r\n+                  content: Text(\r\n+                    'Te rugăm să completezi toate câmpurile',\r\n+                    style: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+              );\r\n+              return;\r\n+            } else if (passwordController.text !=\r\n+                confirmPasswordController.text) {\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                const SnackBar(\r\n+                  content: Text(\r\n+                    'Parolele nu se potrivesc',\r\n+                    style: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+              );\r\n+              return;\r\n+            }\r\n+\r\n+            BlocProvider.of<RegistrationCubit>(context).register(\r\n+              email: emailController.text,\r\n+              password: passwordController.text,\r\n+            );\r\n+          },\r\n+          text: 'Înregistrează-te',\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1730883698624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,12 @@\n   static const absolutPath = '${OnboardingScreen.path}/create_account_screen';\r\n \r\n   final TextEditingController emailController = TextEditingController();\r\n   final TextEditingController passwordController = TextEditingController();\r\n-  final TextEditingController confirmPasswordController =\r\n-      TextEditingController();\r\n+  final TextEditingController confirmPasswordController = TextEditingController();\r\n+  final TextEditingController firstNameController = TextEditingController();\r\n+  final TextEditingController lastNameController = TextEditingController();\r\n+  final TextEditingController phoneController = TextEditingController();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n@@ -29,38 +31,76 @@\n             Navigator.pop(context);\r\n           } else if (state is RegistrationFailure) {\r\n             ScaffoldMessenger.of(context).showSnackBar(\r\n               SnackBar(\r\n-                  content: Text(\r\n-                state.errorMessage,\r\n-                style: const TextStyle(fontSize: theFontSize),\r\n-              )),\r\n+                content: Text(\r\n+                  state.errorMessage,\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                ),\r\n+              ),\r\n             );\r\n           }\r\n         },\r\n         child: Padding(\r\n           padding: const EdgeInsets.all(padding),\r\n           child: SingleChildScrollView(\r\n             child: Column(\r\n-              mainAxisAlignment: MainAxisAlignment.start,\r\n               crossAxisAlignment: CrossAxisAlignment.stretch,\r\n               children: <Widget>[\r\n                 const Text(\r\n                   'Te rugăm să introduci datele de înregistrare pentru a putea accesa aplicația:',\r\n                   textAlign: TextAlign.center,\r\n                   style: TextStyle(fontSize: theFontSize),\r\n                 ),\r\n                 const SizedBox(height: 20),\r\n+\r\n+                // First Name field\r\n                 TextField(\r\n                   style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: firstNameController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Nume',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+\r\n+                // Last Name field\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: lastNameController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Prenume',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+\r\n+                // Phone Number field\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n+                  controller: phoneController,\r\n+                  decoration: const InputDecoration(\r\n+                    labelText: 'Numar Telefon',\r\n+                    labelStyle: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                  keyboardType: TextInputType.phone,\r\n+                ),\r\n+                const SizedBox(height: 20),\r\n+\r\n+                // Email field\r\n+                TextField(\r\n+                  style: const TextStyle(fontSize: theFontSize),\r\n                   controller: emailController,\r\n                   decoration: const InputDecoration(\r\n                     labelText: 'Adresa ta de Email',\r\n                     labelStyle: TextStyle(fontSize: theFontSize),\r\n                   ),\r\n                   keyboardType: TextInputType.emailAddress,\r\n                 ),\r\n                 const SizedBox(height: 20),\r\n+\r\n+                // Password field\r\n                 TextField(\r\n                   style: const TextStyle(fontSize: theFontSize),\r\n                   controller: passwordController,\r\n                   decoration: const InputDecoration(\r\n@@ -72,8 +112,10 @@\n                   ),\r\n                   obscureText: true,\r\n                 ),\r\n                 const SizedBox(height: 20),\r\n+\r\n+                // Confirm Password field\r\n                 TextField(\r\n                   style: const TextStyle(fontSize: theFontSize),\r\n                   controller: confirmPasswordController,\r\n                   decoration: const InputDecoration(\r\n@@ -98,9 +140,12 @@\n             bottom: padding,\r\n           ),\r\n           onPressed: () {\r\n             if (emailController.text.isEmpty ||\r\n-                passwordController.text.isEmpty) {\r\n+                passwordController.text.isEmpty ||\r\n+                firstNameController.text.isEmpty ||\r\n+                lastNameController.text.isEmpty ||\r\n+                phoneController.text.isEmpty) {\r\n               ScaffoldMessenger.of(context).showSnackBar(\r\n                 const SnackBar(\r\n                   content: Text(\r\n                     'Te rugăm să completezi toate câmpurile',\r\n@@ -124,8 +169,11 @@\n \r\n             BlocProvider.of<RegistrationCubit>(context).register(\r\n               email: emailController.text,\r\n               password: passwordController.text,\r\n+              firstName: firstNameController.text,\r\n+              lastName: lastNameController.text,\r\n+              phone: phoneController.text,\r\n             );\r\n           },\r\n           text: 'Înregistrează-te',\r\n         ),\r\n"
                },
                {
                    "date": 1730883837570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:auto_asig/core/data/assistants.dart';\r\n import 'package:auto_asig/core/data/constants.dart';\r\n import 'package:auto_asig/core/widgets/custom_btn.dart';\r\n import 'package:auto_asig/feature/auth/cubit/registration_cubit.dart';\r\n import 'package:auto_asig/feature/auth/cubit/registration_state.dart';\r\n@@ -167,8 +168,31 @@\n               );\r\n               return;\r\n             }\r\n \r\n+            if (validateEmail(emailController.text) == false) {\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                const SnackBar(\r\n+                  content: Text(\r\n+                    'Adresa de email nu este validă',\r\n+                    style: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+              );\r\n+              return;\r\n+            }\r\n+            else if (validatePhoneNumber(phoneController.text) == false) {\r\n+              ScaffoldMessenger.of(context).showSnackBar(\r\n+                const SnackBar(\r\n+                  content: Text(\r\n+                    'Numărul de telefon nu este valid',\r\n+                    style: TextStyle(fontSize: theFontSize),\r\n+                  ),\r\n+                ),\r\n+              );\r\n+              return;\r\n+            }\r\n+\r\n             BlocProvider.of<RegistrationCubit>(context).register(\r\n               email: emailController.text,\r\n               password: passwordController.text,\r\n               firstName: firstNameController.text,\r\n"
                },
                {
                    "date": 1730884585046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n import 'package:auto_asig/core/widgets/custom_btn.dart';\r\n import 'package:auto_asig/feature/auth/cubit/registration_cubit.dart';\r\n import 'package:auto_asig/feature/auth/cubit/registration_state.dart';\r\n import 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\r\n+import 'package:auto_asig/feature/auth/widgets/country_selection_widget.dart';\r\n+import 'package:fl_country_code_picker/fl_country_code_picker.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter_bloc/flutter_bloc.dart';\r\n \r\n class CreateAccountScreen extends StatelessWidget {\r\n@@ -19,8 +21,9 @@\n       TextEditingController();\r\n   final TextEditingController firstNameController = TextEditingController();\r\n   final TextEditingController lastNameController = TextEditingController();\r\n   final TextEditingController phoneController = TextEditingController();\r\n+  CountryCode? countryCode;\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n@@ -128,8 +131,11 @@\n                     helperText: 'Minim 6 caractere',\r\n                   ),\r\n                   obscureText: true,\r\n                 ),\r\n+                countryCode != null\r\n+            ? CountryCodePreview(countryCode: countryCode!)\r\n+            : const Text(\"Tap the TextField's phone number indicator.\"),\r\n               ],\r\n             ),\r\n           ),\r\n         ),\r\n"
                },
                {
                    "date": 1730884602989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,10 +132,10 @@\n                   ),\r\n                   obscureText: true,\r\n                 ),\r\n                 countryCode != null\r\n-                    ? CountryCodePreview(countryCode: countryCode!)\r\n-                    : const Text(\"Tap the TextField's phone number indicator.\"),\r\n+            ? CountryCodePreview(countryCode: countryCode!)\r\n+            : const Text(\"Tap the TextField's phone number indicator.\"),\r\n               ],\r\n             ),\r\n           ),\r\n         ),\r\n"
                }
            ],
            "date": 1728305206737,
            "name": "Commit-0",
            "content": "import 'package:auto_asig/core/data/constants.dart';\nimport 'package:auto_asig/core/widgets/custom_btn.dart';\nimport 'package:auto_asig/feature/auth/cubit/registration_cubit.dart';\nimport 'package:auto_asig/feature/auth/cubit/registration_state.dart';\nimport 'package:auto_asig/feature/auth/screens/onboarding_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_bloc/flutter_bloc.dart';\n\nclass CreateAccountScreen extends StatelessWidget {\n  CreateAccountScreen({super.key});\n\n  static const path = 'create_account_screen';\n  static const absolutPath = '${OnboardingScreen.path}/create_account_screen';\n\n  final TextEditingController emailController = TextEditingController();\n  final TextEditingController passwordController = TextEditingController();\n  final TextEditingController confirmPasswordController =\n      TextEditingController();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Înregistrare'),\n      ),\n      body: BlocListener<RegistrationCubit, RegistrationState>(\n        listener: (context, state) {\n          if (state is RegistrationSuccess) {\n            Navigator.pop(context);\n          } else if (state is RegistrationFailure) {\n            ScaffoldMessenger.of(context).showSnackBar(\n              SnackBar(\n                  content: Text(\n                state.errorMessage,\n                style: const TextStyle(fontSize: theFontSize),\n              )),\n            );\n          }\n        },\n        child: Padding(\n          padding: const EdgeInsets.all(padding),\n          child: SingleChildScrollView(\n            child: Column(\n              mainAxisAlignment: MainAxisAlignment.start,\n              crossAxisAlignment: CrossAxisAlignment.stretch,\n              children: <Widget>[\n                const Text(\n                  'Te rugăm să introduci datele de înregistrare pentru a putea accesa aplicația:',\n                  textAlign: TextAlign.center,\n                  style: TextStyle(fontSize: theFontSize),\n                ),\n                const SizedBox(height: 20),\n                TextField(\n                  style: const TextStyle(fontSize: theFontSize),\n                  controller: emailController,\n                  decoration: const InputDecoration(\n                    labelText: 'Adresa ta de Email',\n                    labelStyle: TextStyle(fontSize: theFontSize),\n                  ),\n                  keyboardType: TextInputType.emailAddress,\n                ),\n                const SizedBox(height: 20),\n                TextField(\n                  style: const TextStyle(fontSize: theFontSize),\n                  controller: passwordController,\n                  decoration: const InputDecoration(\n                    labelText: 'Setează o parolă',\n                    labelStyle: TextStyle(fontSize: theFontSize),\n                    hintText: 'Parola ta',\n                    hintStyle: TextStyle(fontSize: theFontSize),\n                    helperText: 'Minim 6 caractere',\n                  ),\n                  obscureText: true,\n                ),\n                const SizedBox(height: 20),\n                TextField(\n                  style: const TextStyle(fontSize: theFontSize),\n                  controller: confirmPasswordController,\n                  decoration: const InputDecoration(\n                    labelText: 'Confirma parola',\n                    labelStyle: TextStyle(fontSize: theFontSize),\n                    hintText: 'Parola ta',\n                    hintStyle: TextStyle(fontSize: theFontSize),\n                    helperText: 'Minim 6 caractere',\n                  ),\n                  obscureText: true,\n                ),\n              ],\n            ),\n          ),\n        ),\n      ),\n      bottomNavigationBar: SafeArea(\n        child: AsigButton(\n          padding: const EdgeInsets.only(\n            left: padding,\n            right: padding,\n            bottom: padding,\n          ),\n          onPressed: () {\n            if (emailController.text.isEmpty ||\n                passwordController.text.isEmpty) {\n              ScaffoldMessenger.of(context).showSnackBar(\n                const SnackBar(\n                  content: Text(\n                    'Te rugăm să completezi toate câmpurile',\n                    style: TextStyle(fontSize: theFontSize),\n                  ),\n                ),\n              );\n              return;\n            } else if (passwordController.text !=\n                confirmPasswordController.text) {\n              ScaffoldMessenger.of(context).showSnackBar(\n                const SnackBar(\n                  content: Text(\n                    'Parolele nu se potrivesc',\n                    style: TextStyle(fontSize: theFontSize),\n                  ),\n                ),\n              );\n              return;\n            }\n\n            BlocProvider.of<RegistrationCubit>(context).register(\n              email: emailController.text,\n              password: passwordController.text,\n            );\n          },\n          text: 'Înregistrează-te',\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}