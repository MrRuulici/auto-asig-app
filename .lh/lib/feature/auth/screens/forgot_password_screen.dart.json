{
    "sourceFile": "lib/feature/auth/screens/forgot_password_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1730566369037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1730566369037,
            "name": "Commit-0",
            "content": "import 'package:auto_asig/core/data/constants.dart';\r\nimport 'package:auto_asig/feature/auth/cubit/forgot_password_cubit.dart';\r\nimport 'package:auto_asig/feature/auth/cubit/forgot_password_state.dart';\r\nimport 'package:auto_asig/feature/auth/screens/login_screen.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_bloc/flutter_bloc.dart';\r\n\r\nclass ForgotPasswordScreen extends StatelessWidget {\r\n  final TextEditingController _emailController = TextEditingController();\r\n\r\n  static const path = 'forgot-password';\r\n  static const absolutePath = '${LoginScreen.absolutePath}/$path';\r\n\r\n  ForgotPasswordScreen({super.key});\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return BlocProvider(\r\n      create: (context) => ForgotPasswordCubit(),\r\n      child: Scaffold(\r\n        appBar: AppBar(\r\n          title: const Text('Reset Password'),\r\n        ),\r\n        body: Padding(\r\n          padding: const EdgeInsets.all(16.0),\r\n          child: BlocConsumer<ForgotPasswordCubit, ForgotPasswordState>(\r\n            listener: (context, state) {\r\n              if (state is ForgotPasswordSuccess) {\r\n                ScaffoldMessenger.of(context).showSnackBar(\r\n                  const SnackBar(\r\n                    content: Text(\r\n                      'Email pentru resetarea parolei a fost trimis! Verifică-ți căsuța de e-mail.',\r\n                    ),\r\n                  ),\r\n                );\r\n                // Clear the input field on success\r\n                _emailController.clear();\r\n              } else if (state is ForgotPasswordError) {\r\n                ScaffoldMessenger.of(context).showSnackBar(\r\n                  SnackBar(content: Text(state.message)),\r\n                );\r\n              }\r\n            },\r\n            builder: (context, state) {\r\n              return Padding(\r\n                padding: const EdgeInsets.symmetric(horizontal: padding),\r\n                child: Form(\r\n                  child: Column(\r\n                    crossAxisAlignment: CrossAxisAlignment.stretch,\r\n                    children: [\r\n                      const SizedBox(height: 40),\r\n                      const Text(\r\n                        'Introdu adresa de email pentru a reseta parola',\r\n                        style: TextStyle(\r\n                          fontSize: theFontSize,\r\n                        ),\r\n                        textAlign: TextAlign.center,\r\n                      ),\r\n                      const SizedBox(height: 20),\r\n                      TextFormField(\r\n                        controller: _emailController,\r\n                        keyboardType: TextInputType.emailAddress,\r\n                        decoration: const InputDecoration(\r\n                          labelText: 'Email',\r\n                          border: OutlineInputBorder(),\r\n                        ),\r\n                      ),\r\n                      const SizedBox(height: 35),\r\n                      // Reset Button\r\n                      ElevatedButton(\r\n                        onPressed: state is ForgotPasswordLoading\r\n                            ? null // Disable button while loading\r\n                            : () {\r\n                                final email = _emailController.text.trim();\r\n                                context\r\n                                    .read<ForgotPasswordCubit>()\r\n                                    .resetPassword(email);\r\n                              },\r\n                        child: state is ForgotPasswordLoading\r\n                            ? const SizedBox(\r\n                                height: 20,\r\n                                width: 20,\r\n                                child: CircularProgressIndicator(\r\n                                  valueColor: AlwaysStoppedAnimation<Color>(\r\n                                      Colors.blue),\r\n                                ),\r\n                              )\r\n                            : const Text('Resetează Parola',\r\n                                style: TextStyle(fontSize: theFontSize)),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n              );\r\n            },\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}